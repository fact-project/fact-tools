<container>

    <properties url="classpath:/default/settings.properties" />


    <!-- Pathes to the input files -->

    <property name="infile" value="file:/home/lena/Dokumente/Masterarbeit/FACT_Data/Data/20160111_Crab/20160118_087.fits.fz" />
    <property name="drsfile" value="file:/home/lena/Dokumente/Masterarbeit/FACT_Data/Data/20160111_Crab/20160118_080.drs.fits.gz"/>

    <property name="outfolder" value="file:/home/lena/Dokumente/Masterarbeit/FellWalker/Separation/" />
    <property name="filename" value="data_crab_20160118_087" />

    <property name="integralGainFile" value="classpath:/default/defaultIntegralGains.csv" />
    <property name="pixelDelayFile" value="classpath:/default/delays_lightpulser_20150217.csv" />

    <property name="auxFolder" value="file:src/main/resources/aux/" />
    <service id="auxService" class="fact.auxservice.AuxFileService" auxFolder="${auxFolder}" />

    <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />

    <stream id="fact" class="fact.io.zfits.ZFitsStream"  url="${infile}"/>

    <!-- Description of the process and the corresponding stream -->
    <process id="2" input="fact" >


         <Skip condition="%{data.TriggerType} != 4" />

        <include url="classpath:/default/data/prevEventAndSkip.xml" />
        <include url="classpath:/default/data/calibration.xml" />

        <fact.extraction.BasicExtraction
                dataKey="DataCalibrated"
                outputKeyMaxAmplPos="maxPos"
                outputKeyPhotonCharge="photoncharge"
                url="${integralGainFile}"
                startSearchWindow="${basicExtraction_startSearchWindow}"
                rangeSearchWindow="${basicExtraction_rangeSearchWindow}"
                rangeHalfHeightWindow="${basicExtraction_rangeHalfHeigthWindow}"/>

        <fact.extraction.RisingEdgeForPositions
                dataKey="DataCalibrated"
                outputKey="ArrtimePos"
                amplitudePositionsKey="maxPos"
                maxSlopesKey="maxSlope"/>

         <fact.cleaning.MotionCleaning
                threshold = "30"
                outputKey = "pixelSet"/>

        <Skip condition="%{data.numShowerPixel} &lt; 15 "/>

        <fact.hexmap.ClusterFellwalker
                pixelSetKey="pixelSet"
        />




        <!--<Skip condition="%{data.NumCluster} == 0" />-->

        <!--<fact.io.JSONWriter keys="EventNum,numShowerPixel,numCluster,boundRatio,idealBoundDiff,boundAngleSum,distanceCenterSum,neighborCluster,chargeMax,maxClusterNumPixel,numClusterPixel,stdNumPixel,convexity" url="${outfolder}${filename}.json"/>-->

        <!--<fact.ShowViewer key="DataCalibrated"/>-->

    </process>


</container>
