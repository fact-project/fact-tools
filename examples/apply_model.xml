<container>

    <properties url="classpath:/default/settings.properties" />

    <property name="infile" value="file:src/main/resources/testDataFile.fits.gz" />
    <property name="drsfile" value="file:src/main/resources/testDrsFile.drs.fits.gz" />

    <property name="integralGainFile" value="classpath:/default/gain_sorted_20131127.csv" />
    <property name="pixelDelayFile" value="classpath:/default/delays_lightpulser_20150217.csv" />

    <property name="outfile" value="file:/home/fabian/testoutfile.txt" />

    <property name="auxFolder" value="file:src/main/resources/aux/" />
    <service id="auxService" class="fact.auxservice.AuxFileService" auxFolder="${auxFolder}" />

    <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />

    <!--In case you want to analyze .zfits files.-->
    <!-- <stream id="fact" class="fact.io.hdureader.FITSStream"  url="${infile}"/> -->

    <stream id="fact" class="fact.io.hdureader.FITSStream" url="${infile}"/>

    <process id="2" input="fact">
        <!-- prevEventAndSkip: -->
        <!-- PreviousEventInfo, Skip(no Data Trigger) -->
        <include url="classpath:/default/data/prevEventAndSkip.xml" />
        <!-- Output: Data -->

        <!-- Calibration: -->
        <!-- DrsCalibration, PatchJumpRemoval, RemoveSpikes,
        DrsTimeCalibration, InterpolateBadPixel -->
        <include url="classpath:/default/data/calibration.xml" />
        <!-- Output: DataCalibrated -->

        <!-- Extraction -->
        <!-- BasicExtraction, RisingEdgeForPositions, RisingEdgePolynomFit, TimeOverThreshold,
        PhotonChargeTimeOverThreshold, HandleSaturation, CorrectPixelDelays-->
        <include url="classpath:/default/data/extraction.xml" />
        <!-- Output: photoncharge, arrivalTime -->

        <!-- Cleaning -->
        <!-- SourcePosition(Cetatauri), CoreNeighborCleanTimeNeighbor-->
        <include url="classpath:/default/data/cleaning.xml" />
        <!-- Output: shower -->

        <!-- Parameter calculation (only source independent) -->
        <!-- ArrayMean(photoncharge,arrivalTime), ArrayStatistics(photoncharge,arrivalTime,maxSlopes,
        arrivalTimePos,maxSlopesPos,maxAmplitudePosition,photonchargeSaturated,arrivalTimeTOT),
        HillasParameters, NumberOfIslands, TimeGraident,
        Concentration, ConcentrationCore, ConcentrationAtCenterOfGravity, Leakage, TimeSpread,
        ShowerSlope, Disp -->
        <include url="classpath:/default/data/parameterCalc.xml" />
        <!-- Output: source independent parameters -->

        <!-- Parameter calculation (only source dependent) -->
        <!-- SourcePosition(${sourcename}), AntiSourcePosition(5), Alpha(for 6 Sources),
        Distance(for 6 Sources), CosDeltaAlpha(for 6 Sources), Theta(for 6 Sources) -->
        <include url="classpath:/default/data/sourceParameter.xml" />
        <!-- Output: source dependent parameters -->

        <!--<fact.io.PrintKeys keys="${keysForOutput}" />-->

        <fact.ApplyModel url="file:/home/kai/Development/erna/test.pmml" />

        <!--<fact.ShowViewer key="DataCalibrated"/>-->
    </process>


</container>
