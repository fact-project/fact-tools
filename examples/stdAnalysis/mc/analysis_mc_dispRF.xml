<container>

	<properties url="classpath:/default/settings_mc.properties" />

    <property name="infile" value="file:src/main/resources/testMcFile.fits.gz" />
	<property name="drsfile" value="file:src/main/resources/testMcDrsFile.drs.fits.gz" />
	<property name="dispRFfile" value="file:/home/mknoetig/doctorate/programming/ara/DispRegressor_v1.pmml"/>

    <property name="integralGainFile" value="classpath:/default/defaultIntegralGains.csv" />

    <property name="outfile" value="file:/home/fabian/testoutfile_mc.txt" />

    <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />

    <stream id="fact" class="fact.io.hdureader.FITSStream" url="${infile}"/>

    <process id="2" input="fact">

		<stream.flow.Skip condition="%{data.TriggerType} != 4" />
        <!-- Calibration: -->
        <!-- PreviousEventInfo, DrsCalibration, PatchJumpRemoval, RemoveSpikes,
        DrsTimeCalibration, InterpolateBadPixel -->
        <include url="classpath:/default/mc/calibration_mc.xml" />
        <!-- Output: DataCalibrated -->

        <!-- Extraction -->
        <!-- BasicExtraction, RisingEdgeForPositions, RisingEdgePolynomFit, TimeOverThreshold,
        PhotonChargeTimeOverThreshold, HandleSaturation, CorrectPixelDelays-->
        <include url="classpath:/default/mc/extraction_mc.xml" />
        <!-- Output: photoncharge, arrivalTime -->

        <!-- Cleaning -->
        <!-- SourcePosition(Cetatauri), CoreNeighborCleanTimeNeighbor-->
        <include url="classpath:/default/mc/cleaning_mc.xml" />
        <!-- Output: shower -->

        <!-- Parameter calculation (only source independent) -->
        <!-- ArrayMean(photoncharge,arrivalTime), ArrayStatistics(photoncharge,arrivalTime,maxSlopes,
        arrivalTimePos,maxSlopesPos,maxAmplitudePosition,photonchargeSaturated,arrivalTimeTOT),
        Size, HillasParameters, M3Long, Length, Width, NumberOfIslands, TimeGraident,
        Concentration, ConcentrationCore, ConcentrationAtCenterOfGravity, Leakage, TimeSpread,
        ShowerSlope, Disp -->
        <include url="classpath:/default/mc/parameterCalc_mc_dispRF.xml" />
        <!-- Output: source independent parameters -->

        <!-- test the pmml file implementation -->
        <fact.ApplyModel url="${dispRFfile}" />

        <!-- Parameter calculation (only source dependent) -->
        <!-- SourcePosition(${sourcename}), AntiSourcePosition(5), Alpha(for 6 Sources),
        Distance(for 6 Sources), CosDeltaAlpha(for 6 Sources), Theta(for 6 Sources) -->
        <include url="classpath:/default/mc/sourceParameter_mc.xml" />
        <!-- Output: source dependent parameters -->

         <fact.io.PrintKeysOnConsole keys="${keysForOutput}" />

        <!--<fact.io.RootASCIIWriter url="${outfile}" keys="${keysForOutput}" />-->

    </process>


</container>
