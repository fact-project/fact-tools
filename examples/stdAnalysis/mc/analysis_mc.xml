<container>
  <properties url="classpath:/default/settings_mc.properties" />

  <property name="infile" value="file:src/main/resources/testMcFile.fits.gz" />
  <property name="drsfile" value="file:src/main/resources/testMcDrsFile.drs.fits.gz" />
  <property name="outfile" value="file:testMcFile_dl2.fits" />

  <property name="integralGainFile" value="classpath:/default/defaultIntegralGains.csv" />

  <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />

  <stream id="fact" class="fact.io.hdureader.FITSStream" url="${infile}"/>

  <process id="2" input="fact">

      <stream.flow.Skip condition="%{data.TriggerType} != 4" />
      <!-- Calibration: -->
      <!-- PreviousEventInfo, DrsCalibration, PatchJumpRemoval, RemoveSpikes,
      DrsTimeCalibration, InterpolateBadPixel -->
      <include url="classpath:/default/mc/calibration_mc.xml" />
      <!-- Output: DataCalibrated -->

      <!-- Extraction -->
      <!-- BasicExtraction, RisingEdgeForPositions, RisingEdgePolynomFit, TimeOverThreshold,
      PhotonChargeTimeOverThreshold, HandleSaturation, CorrectPixelDelays-->
      <include url="classpath:/default/mc/extraction_mc.xml" />
      <!-- Output: photoncharge, arrivalTime -->

      <!-- Cleaning -->
      <!-- SourcePosition(Cetatauri), CoreNeighborCleanTimeNeighbor-->
      <include url="classpath:/default/mc/cleaning_mc.xml" />
      <!-- Output: shower -->

      <!-- pedestal parameters -->
      <!-- WaveformFluctuation on non-cleaning pixels-->
      <include url="classpath:/default/mc/pedestalParameters_mc.xml" />

      <!-- Parameter calculation (only source independent) -->
      <!-- ArrayMean(photoncharge,arrivalTime), ArrayStatistics(photoncharge,arrivalTime,maxSlopes,
      arrivalTimePos,maxSlopesPos,maxAmplitudePosition,photonchargeSaturated,arrivalTimeTOT),
      HillasParameters, NumberOfIslands, TimeGraident,
      Concentration, ConcentrationCore, ConcentrationAtCenterOfGravity, Leakage, TimeSpread,
      ShowerSlope, Disp -->
      <include url="classpath:/default/mc/parameterCalc_mc.xml" />
      <!-- Output: source independent parameters -->

      <fact.features.source.SourcePosition
              outputKey="sourcePosition"
              pointingZdKey="MPointingPos.fZd"
              pointingAzKey="MPointingPos.fAz"
              sourceZdKey="MSimSourcePos.fZd"
              sourceAzKey="MSimSourcePos.fAz"
      />

      <fact.utils.SanitizeKeys />
      <fact.io.FITSWriter url="${outfile}" keys="${keysForOutput}"/>
  </process>
</container>
