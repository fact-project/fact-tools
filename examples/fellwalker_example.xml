<container>

    <properties url="classpath:/default/settings_mc.properties" />

    <property name="infile" value="file:src/main/resources/testMcFile.fits.gz" />
    <property name="drsfile" value="file:src/main/resources/testMcDrsFile.drs.fits.gz" />

    <property name="integralGainFile" value="classpath:/default/defaultIntegralGains.csv" />

    <property name="outfile" value="file:/home/fabian/testoutfile_mc.txt" />

    <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />

    <stream id="fact" class="fact.io.hdureader.FITSStream" url="${infile}"/>

    <process id="2" input="fact">

        <stream.flow.Skip condition="%{data.TriggerType} != 4" />

        <include url="classpath:/default/mc/calibration_mc.xml" />

        <include url="classpath:/default/mc/extraction_mc.xml" />

        <include url="classpath:/default/mc/cleaning_mc.xml" />
        <!-- Output: shower -->
        <include url="classpath:/default/mc/parameterCalc_mc.xml" />

        <include url="classpath:/default/mc/sourceParameter_mc.xml" />


        <fact.features.watershed.ClusterFellwalker
                arrivaltimePosKey="arrivalTime"
                photonchargeKey="photoncharge"
                showerKey="shower"
                morphologyKey="photoncharge"
                minShowerpixel="2"
        />

        <Skip condition="%{data.numCluster} == 0" />


        <fact.io.PrintKeys keys="numCluster,boundRatio,idealBoundDiff,boundAngle,distanceCenter,neighborCluster,chargeMax,maxClusterNumPixel,numClusterPixel,stdNumPixel,convexity" />


    </process>


</container>
