<container>
    <properties url="classpath:/default/settings.properties" />

    <property name="infile" value="classpath:/testMcFile.fits.gz" />
    <property name="drsfile" value="classpath:/testMcDrsFile.drs.fits.gz" />
    <property name="auxFolder" value="file:src/main/resources/aux/" />

    <property name="pixelDelayFile" value="classpath:/default/delays_zero.csv" />

    <property name="outfile" value="file:/home/fabian/testoutfile_mc.txt" />

    <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />
    <service id="auxService" class="fact.auxservice.AuxFileService" auxFolder="${auxFolder}" />
    <service id="gainService" class="fact.gainservice.GainService" />

    <stream id="fact" class="fact.io.hdureader.FITSStream" url="${infile}"/>

    <process id="2" input="fact">

        <stream.flow.Skip condition="%{data.TriggerType} != 4" />

        <include url="classpath:/analysis/calibration.xml" />
        <include url="classpath:/analysis/extraction.xml" />
        <include url="classpath:/analysis/cleaning.xml" />

        <!-- Only analyze events with at least 5 pixels after cleaning -->
        <Skip condition="%{data.num_pixel_in_shower} &lt; 5" />

        <include url="classpath:/analysis/imageParameters.xml" />
        <include url="classpath:/analysis/sourcePosition.xml" />
        <include url="classpath:/analysis/sourceDependentParameters.xml" />

        <fact.features.watershed.ClusterFellwalker
            arrivaltimePosKey="arrivalTime"
            photonchargeKey="photoncharge"
            showerKey="shower"
            morphologyKey="photoncharge"
            minShowerpixel="2"
        />

        <Skip condition="%{data.numCluster} == 0" />

        <fact.io.PrintKeys keys="numCluster,boundRatio,idealBoundDiff,boundAngle,distanceCenter,neighborCluster,chargeMax,maxClusterNumPixel,numClusterPixel,stdNumPixel,convexity" />
    </process>
</container>
