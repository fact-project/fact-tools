<container>

<!-- Pfade zu den fits files. -->
<property name="data" value="/Users/kaibrugge/FactTest/20130104_095.fits" />
<property name="dataDRS" value="/Users/kaibrugge/FactTest/20130104_076.drs.fits" />
<property name="drive_file" value="/Users/kaibrugge/FactTest/20130104.DRIVE_CONTROL_TRACKING_POSITION.fits" />
<property name="dataCeres" value="/Users/kaibrugge/FactTest/ceres_gamma_2.fits" />
<property name="ceresDRS" value="/Users/kaibrugge/FactTest/ceres.drs.fits" />
<property name="csv" value="/Users/kaibrugge/FactTest/output.csv" />
<property name="csvCeres" value="/Users/kaibrugge/FactTest/outputCeresGamma.csv" />

	<!-- Name des Streams und pfad zu dem Daten-File -->
	<stream id="ceres" class="fact.io.FitsStream"  url="file:${dataCeres}"  />
	<stream id="fact" class="fact.io.FitsStream"  url="file:${data}" limit="1000" />
	
	<!-- Beschreibung des zu bearbeitenden Prozesses und zu welchem Stream fieser gehÃ¶rt -->
	<process id="2" input="ceres">
			<fact.utils.Remapping key="Data" />
	        <fact.filter.DrsCalibration url="file:${ceresDRS}" key="Data"  outputKey="DataCalibrated" color="#000000"/>  
			<fact.features.PhotonCharge key="DataCalibrated" outputKey="photoncharge" color="#FF0F0F"/>
            <fact.features.MaxAmplitudePosition key="DataCalibrated" outputKey="position"/>
            <fact.features.RisingEdge key="DataCalibrated" outputKey="arrivalTime"/>
            <fact.cleaning.CoreNeighborClean key="photoncharge" outputKey="shower" keyPositions="arrivalTime" timeThreshold="30"  minSize="4"/>
            
            <fact.features.SourcePosition outputKey="sourcePosition" X="0.0" Y="0.0"/>
			
<!--             <fact.features.HillasParameter pixels="shower" photonEquivalent="photoncharge" sourcePosition="sourcePosition" outputKey="Hillas_"/> -->
			<stream.monitor.DataRate every="100" />
<!-- 			<fact.features.RisingEdge key="DataCalibrated" outputKey="arrivalTime"/> -->
<!-- 			<fact.statistics.CreateHistogram key="arrivalTime"  min="0" max="150" numberOfBins="301" outputKey="aH"/> -->
<!-- 			<fact.image.monitors.HistogramPlotter key="aH"  logAxis="true" max="150"/> -->

			<fact.features.DistributionFromShower weights="photoncharge" key="shower" outputKey="dist" />
			
			<fact.features.HillasAlpha distribution="dist" sourcePosition="sourcePosition" outputKey="alpha" />
			<fact.features.HillasDistance distribution="dist" sourcePosition="sourcePosition" outputKey="distance" />
			<fact.features.HillasLength distribution="dist" outputKey="length" />
			<fact.features.HillasWidth distribution="dist" outputKey="width" />
			<fact.features.HillasConcentration shower="shower" weights="photoncharge" outputKey="concentration" />
			<fact.features.Size showerKey="shower" photonChargeKey="photoncharge" outputKey="size" />
			
			<fact.image.monitors.ScatterPlotter xValue="alpha" yValue="size" color="#039C0B"/>
			<Skip condition="%{data.alpha} == NaN" />
<!-- 			<PrintData /> -->
<!-- 			<fact.io.RootASCIIWriter keys="alpha,alpha2" url="file:${csvCeres}" /> -->
<!-- 			<fact.image.monitors.ScatterPlotter xValue="photoncharge" yValue="arrivalTime" color="#B34C0B"/> -->
<!-- 			<stream.io.CsvWriter keys="Hillas_Width,Hillas_Length,Hillas_Size,Hillas_Area,Hillas_Alpha,Hillas_Distance,Hillas_Concentration,Hillas_Concentration2,Hillas_Leakage,Hillas_Secondleakage,MCorsikaEvtHeader.fEvtNumber,MCorsikaEvtHeader.fTotalEnergy,MMcEvt.fPhotElfromShower,MCorsikaEvtHeader.fZd,MCorsikaEvtHeader.fAz,@source" url="file:${csvCeres}" /> -->
<!-- 			<fact.image.ShowImage/> -->
	</process>

<!-- 	<process id="1" input="fact"> -->
<!-- 			<Skip condition="%{data.TriggerType} != 4" /> -->
<!-- 	        <fact.filter.DrsCalibration url="file:${dataDRS}" key="Data"  outputKey="DataCalibrated" color="#000000"/>   -->
<!--             <fact.utils.CutSlices  start="22" end="220"/> -->
<!--             <fact.filter.InterpolateBadPixel key="DataCalibrated"  outputKey="DataCalibrated" -->
<!--                 badChidIds="863,868,297,927,80,873,1093,1094,527,528,721,722" /> -->
<!-- 	        <fact.filter.RemoveSpikesMars key="DataCalibrated" topSlope="8.0"/> -->
<!--             <fact.filter.AverageJumpRemoval key="DataCalibrated" outputKey="DataCalibrated" color="#FD0404"/> -->
<!-- 			<stream.monitor.DataRate every="100" /> -->
<!-- 			<fact.features.RisingEdge key="DataCalibrated" outputKey="arrivalTime"/> -->
<!-- 			<fact.statistics.CreateHistogram key="arrivalTime"  min="0" max="198" numberOfBins="198" outputKey="aH"/> -->
<!-- 			<fact.image.monitors.HistogramPlotter key="aH"  logAxis="true" max="198" color="#FD0404"/> -->

<!-- 	</process> -->
		
		
</container>

