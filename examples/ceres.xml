<container>

<!-- Pfade zu den fits files. -->
<property name="data" value="/Users/kaibrugge/FactTest/20130104_095.fits" />
<property name="dataDRS" value="/Users/kaibrugge/FactTest/20130104_076.drs.fits" />
<property name="drive_file" value="/Users/kaibrugge/FactTest/20130104.DRIVE_CONTROL_TRACKING_POSITION.fits" />
<property name="dataCeres" value="/Users/kaibrugge/FactTest/ceres3.fits" />
<property name="ceresDRS" value="/Users/kaibrugge/FactTest/ceres.drs.fits" />
<property name="csv" value="/Users/kaibrugge/FactTest/output.csv" />
<property name="csvCeres" value="/Users/kaibrugge/FactTest/outputCeresProton.csv" />

	<!-- Name des Streams und pfad zu dem Daten-File -->
	<stream id="ceres" class="fact.io.FitsStream"  url="file:${dataCeres}"  />
<!-- 	<stream id="fact" class="fact.io.FitsStream"  url="file:${data}"  /> -->
	
	<!-- Beschreibung des zu bearbeitenden Prozesses und zu welchem Stream fieser gehÃ¶rt -->
	<process id="2" input="ceres">
			<fact.utils.Remapping key="Data" />
	        <fact.filter.DrsCalibration url="file:${ceresDRS}" key="Data"  outputKey="DataCalibrated" color="#000000"/>  
			<fact.features.PhotonCharge key="DataCalibrated" outputKey="photoncharge" color="#FF0F0F"/>
            <fact.features.MaxAmplitudePosition key="DataCalibrated" outputKey="position"/>
            <fact.cleaning.CoreNeighborClean key="photoncharge" outputKey="shower" keyPositions="position" timeThreshold="30"  minSize="4"/>
            
            <fact.features.SourcePosition outputKey="sourcePosition" X="0.0" Y="0.0"/>
			
            <fact.features.HillasParameter pixels="shower" photonEquivalent="photoncharge" sourcePosition="sourcePosition" outputKey="Hillas_"/>
<!-- 			<fact.io.RootASCIIWriter keys="Hillas_Size" url="file:${csvCeres}" /> -->
<!-- 			<PrintData /> -->
			<stream.monitor.DataRate every="100" />
			<Skip condition="%{data.Hillas_Size} == null" /> 
<!-- 			<fact.image.monitors.ScatterPlotter xValue="Hillas_Size" yValue="MMcEvt.fPhotElfromShower" color="#B34C0B"/> -->
<!-- 			<fact.image.monitors.ScatterPlotter xValue="Hillas_Area" yValue="MMcEvt.fPhotElfromShower" color="#039C0B"/> -->
			<stream.io.CsvWriter keys="Hillas_Size,Hillas_Area,Hillas_Alpha,Hillas_Delta,MMcEvt.fPhotElfromShower" url="file:${csvCeres}" />
<!-- 			<fact.image.ShowImage/> -->
	</process>

<!-- 	<process id="1" input="fact"> -->
<!-- 			<Skip condition="%{data.TriggerType} != 4" /> -->
<!-- 	        <fact.filter.DrsCalibration url="file:${dataDRS}" key="Data"  outputKey="DataCalibrated" color="#000000"/>   -->
<!--             <fact.utils.CutSlices  start="22" end="220"/> -->
<!--             <fact.filter.InterpolateBadPixel key="DataCalibrated"  outputKey="DataCalibrated" -->
<!--                 badChidIds="863,868,297,927,80,873,1093,1094,527,528,721,722" /> -->
<!-- 	        <fact.filter.RemoveSpikesMars key="DataCalibrated" topSlope="8.0"/> -->
<!--             <fact.filter.AverageJumpRemoval key="DataCalibrated" outputKey="DataCalibrated" color="#FD0404"/> -->
<!-- 	        <fact.features.MaxAmplitude key="DataCalibrated" outputKey="max" /> -->
<!-- 			<fact.features.PhotonCharge key="DataCalibrated" outputKey="c" /> -->
<!--             <fact.cleaning.CoreNeighborClean key="photoncharge" outputKey="shower" keyPositions="position" timeThreshold="30" /> -->
               
<!--             <fact.features.SourcePosition url="file:${drive_file}" outputKey="sourcePosition"/> -->
			
<!--             <fact.features.HillasParameter pixels="shower" photonEquivalent="photoncharge" sourcePosition="sourcePosition" outputKey="Hillas_"/> -->
<!-- 			<stream.monitor.DataRate every="100" /> -->
<!-- 			<fact.image.ShowImage/> -->

<!-- 	</process> -->
		
		
</container>

