<container>

<!-- Pfade zu den fits files. -->
<!-- <property name="data" value="/home/fabian/mount/Phido/fhgfs_app/fact/raw/2013/01/11/20130111_060.fits.gz" />
<property name="dataDRS" value="/home/fabian/mount/Phido/fhgfs_app/fact/raw/2013/01/11/20130111_044.drs.fits.gz" /> -->
<!-- <property name="data" value="/home/fabian/mount/data/LinuxDaten/uni/FACT/timedrscalibtest/20130328_009.fits.gz" />
<property name="dataDRS" value="/home/fabian/mount/data/LinuxDaten/uni/FACT/timedrscalibtest/20130328_007.drs.fits.gz" /> -->
<property name="data" value="/home/fabian/mount/data/LinuxDaten/uni/FACT/timedrscalibtest/20130104_020.fits.gz" />
<property name="dataDRS" value="/home/fabian/mount/data/LinuxDaten/uni/FACT/timedrscalibtest/20130104_018.drs.fits.gz" />
<!-- <property name="data" value="/home/fabian/mount/Phido/fhgfs_app/fact/raw/2013/06/02/20130602_014.fits.gz" />
<property name="dataDRS" value="/home/fabian/mount/Phido/fhgfs_app/fact/raw/2013/06/02/20130602_012.drs.fits.gz" /> -->


<property name="outfile" value="/home/fabian/mount/data/LinuxDaten/uni/FACT/timedrscalibtest/20130104_020_constants.csv" />


	<!-- Name des Streams und pfad zu dem Daten-File -->
	<stream id="fact" class="fact.io.FitsStream"  url="file:${data}" limit="1000"/>
	
	<!-- Beschreibung des zu bearbeitenden Prozesses und zu welchem Stream dfieser gehÃ¶rt -->
	<process input="fact" copies="1">
		<!-- <Skip condition="%{data.TriggerType} != 4" /> -->
	      <fact.filter.DrsCalibration url="file:${dataDRS}" key="data"  outputKey="DataCalibrated" color="#000000"/> 
            <fact.features.FillAverageTimeWidth key="DataCalibrated" outputKey="timeOffset" numberTimeMarker="160"/> 
            <!-- <fact.utils.CutSlices start="250" end="300" outputKey="DataCalibrated"/> -->
            <!-- <fact.filter.RemoveSpikesMars key="DataCalibrated" topSlope="8.0"/> -->
            <!-- <fact.filter.AverageJumpRemoval key="DataCalibrated" outputKey="JumpRemoved" color="#FD0404"/> -->
            
<!--             <fact.datacorrection.InterpolateBadPixel key="DataCalibrated"  outputKey="DataCalibrated"
                badChidIds="863,868,297,927,80,873,1093,1094,527,528,721,722" /> -->


            <!-- <PrintData /> -->
            <!-- <fact.plotter.BarPlotter keys="timeOffset" title="timeOffset"/> -->
            <!-- <fact.plotter.BarPlotter keys="timeAverageWidth" title="timeAverageWidth"/> -->
            
            <!-- <fact.image.ShowImage/> -->
            <stream.flow.Skip condition="%{data.EventNum} &lt; 1000" />
            <fact.io.RootASCIIWriter keys="EventNum,timeOffset"  url="file:${outfile}" />
            <!-- <fact.io.RootASCIIWriter keys="EventNum,@source"  url="file:${outfile}" /> -->
            <!-- <stream.io.CsvWriter keys="EventNum,@source"  url="file:${outfile}" /> -->
            <!-- <stream.io.CsvWriter keys="EventNum,feH,tm_risingEdges[],tm_fallingEdges,tm_durations,tm_maxHeights,tm_integrals,tm_averageHeights"  url="file:${outfile}" /> -->
            


	</process>
		
		
		
</container>

