<container>

<!-- Pfade zu den fits files. -->
 <!--<property name="data" value="/home/bruegge/FactTest/20120209_061.fits" />-->
 <!--<property name="dataDRS" value="/home/bruegge/FactTest/20120209_050.drs.fits" />-->
 <!--<property name="drive_file" value="/home/bruegge/FactTest/drive_file.fits" />-->
<!-- <property name="sample" value="/home/bruegge/FactTest/sample.fits.gz" /> -->
<!--<property name="sampleDRS" value="/home/bruegge/FactTest/test.drs.fits.gz" />-->
<!--<property name="outfile" value="/home/bruegge/FactTest/output.csv" />-->
<!-- <property name="data" value="/Users/kaibrugge/FactTest/jafs_mc.fits.gz" /> -->
<!-- <property name="dataDRS" value="/Users/kaibrugge/FactTest/jafs_mc.drs.fits.gz" /> -->

<property name="objectStream" value="/Users/kaibrugge/FactTest/test.obj" />

<property name="data" value="/Users/kaibrugge/FactTest/20130104_095.fits" />
<property name="dataDRS" value="/Users/kaibrugge/FactTest/20130104_076.drs.fits" />
<property name="outfile" value="/Users/kaibrugge/FactTest/m3_test.csv" />
<property name="drivefile" value="/Users/kaibrugge/FactTest/20130104.DRIVE_CONTROL_TRACKING_POSITION.fits" />


    <process input="fact" copies="1">
        <stream.monitor.DataRate every="200" />
        <Skip condition="%{data.TriggerType} != 4" />
        <fact.filter.DrsCalibration url="file:${dataDRS}"  outputKey="DataCalibrated" />
        <!--<fact.filter.AverageJumpRemoval key="DataCalibrated" outputKey="JumpRemoved" color="#FD0404"/>-->


        <stream.flow.Skip condition="%{data.TriggerType} != 4" />
        <fact.datacorrection.InterpolateBadPixel key="DataCalibrated"  outputKey="DataCalibrated" />

        <fact.extraction.MaxAmplitudePosition key="DataCalibrated" searchWindowLeft="25"
                                              searchWindowRight="125" outputKey="maxAmplitudePosition"/>
        <fact.extraction.RisingEdgeForPositions dataKey="DataCalibrated" amplitudePositionsKey="maxAmplitudePosition"
                                                outputKey="arrivalTime"/>
        <fact.extraction.PhotonCharge dataKey="DataCalibrated" positions="maxAmplitudePosition"
                                      outputKey="photoncharge" rangeSearchWindow="25" />


        <fact.cleaning.CoreNeighborClean photonChargeKey="photoncharge" outputKey="shower" arrivalTimeKey="arrivalTime"
                                         corePixelThreshold="${core_threshold}" neighborPixelThreshold="${neighbor_threshold}"
                                         timeThreshold="${time_threshold}"  minNumberOfPixel="${min_number_of_pixel}"/>

        <!--<stream.flow.Skip condition="%{data.EventNum} &lt; 50" />-->
        <stream.flow.Skip condition="%{data.shower} == null" />
        <fact.features.Size showerKey="shower" photonChargeKey="photoncharge" outputKey="size" />
        <fact.features.NumberOfIslands key="shower" outputKey="num_isl" />
        <fact.features.source.SourcePosition outputKey="sourcePosition" url="file:${drivefile}" physicalSource="${sourcename}" />
        <!--<fact.io.PrintKeysOnConsole keys="num_isl" />-->
        <!--<stream.flow.Skip condition="%{num_isl} &gt; 1" />-->
        <fact.features.DistributionFromShower weightsKey="photoncharge" showerKey="shower" outputKey="dist" />
        <fact.features.M3Long showerKey="shower" weightsKey="photoncharge" distribution="dist" />
        <stream.flow.Skip condition="%{M3Long} &gt; 1" />
        <fact.features.Disp widthKey="Width" lengthKey="Length" c0="117.94" outputKey="Disp" />
        <fact.features.source.Theta sourcePositionKey="sourcePosition" dispKey="Disp" cogxKey="COGx" cogyKey="COGy" deltaKey="Delta" m3longKey="M3Long" outputKey="Theta" />

        <fact.io.PrintKeysOnConsole keys="num_isl,Delta,M3Long,M3Trans,m3l,m3t,Theta" />
        <fact.ShowViewer key="photoncharge"/>
        <!--<fact.features.Leakage shower="shower" weights="photoncharge" outputKey="leakage" />-->
        <!--<fact.features.TimeSpread arrivalTimeKey="arrivalTime" showerKey="shower" weightsKey="photoncharge" outputKey="TimeSpread" />-->
        <!--<PrintData/>-->
        <!--<fact.plotter.HistogramPlotter key="m3l" binWidth="5" logAxis="false" color="#666699" />-->
        <!--<fact.plotter.HistogramPlotter key="M3Long" binWidth="0.025" logAxis="false" color="#FF6699" />-->
        <!--<stream.io.CsvWriter url="file:${outfile}" keys="M3Long,M3Trans,Length,Width,size,islands,M4Long,M4Trans,leakage,leakage2,TimeSpread,m3l,m3t,num_isl"/>-->
        <!--<fact.ShowViewer key="DataCalibrated" range="25,250"/>-->
        <!-- 			<fact.plotter.ScatterPlotter xValue="showerPositionMean" yValue="showerPhotonChargeMean" logAxis="false" /> -->
        <!-- 			<fact.plotter.HistogramPlotter key="showerPositionMean" binWidth="1" logAxis="false" /> -->
        <!-- 			<fact.plotter.BarPlotter keys="posMean,showerPositionMean" /> -->
        <!-- 			<fact.plotter.CameraPlotter key="risingedge" /> -->
        <!-- 			<fact.plotter.CameraPlotter key="photoncharge" /> -->

    </process>
    <property name="sourcename" value="crab" />
    <property name="core_threshold" value="8.0" />
    <property name="neighbor_threshold" value="5.0"/>
    <property name="time_threshold" value="50.0" />

	<!-- Name des Streams und pfad zu dem Daten-File -->
<property name="min_number_of_pixel" value="5" />

    <!-- Beschreibung des zu bearbeitenden Prozesses und zu welchem Stream dfieser gehÃ¶rt -->
	<stream id="fact" class="stream.io.DataObjectStream"  url="file:${objectStream}"  />

		
		
</container>

