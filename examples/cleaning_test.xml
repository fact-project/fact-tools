<container>

  <properties url="classpath:/default/settings.properties" />

    <property name="infile" value="file:src/main/resources/testDataFile.fits.gz" />
    <property name="drsfile" value="file:src/main/resources/testDrsFile.drs.fits.gz" />
    <property name="outfile" value="file:new_cleaning.json" />

    <property name="integralGainFile" value="classpath:/default/gain_sorted_20131127.csv" />
    <property name="pixelDelayFile" value="classpath:/default/delays_lightpulser_20150217.csv" />

    <property name="auxFolder" value="file:src/main/resources/aux/" />
    <service id="auxService" class="fact.auxservice.AuxFileService" auxFolder="${auxFolder}" />
    <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />

    <!--In case you want to analyze .zfits files.-->
    <!-- <stream id="fact" class="fact.io.zfits.ZFitsStream"  url="${infile}"/> -->

    <stream id="fact" class="fact.io.hdureader.FITSStream" url="${infile}"/>

    <process id="2" input="fact">
      <!-- prevEventAndSkip: -->
      <!-- PreviousEventInfo, Skip(no Data Trigger) -->
      <fact.utils.PreviousEventInfo
          startCellKey="StartCellData"
          outputKey="prevEvents"
          limitEvents="${prevEvents_limitEvents}"
      />
      <!-- Output: Data -->

      <!-- Calibration: -->
      <!-- DrsCalibration, PatchJumpRemoval, RemoveSpikes,
      DrsTimeCalibration, ArrayTimeCorrection, InterpolateBadPixel -->
      <include url="classpath:/default/data/calibration.xml" />
      <!-- Output: DataCalibrated -->

      <!-- Extraction -->
      <!-- BasicExtraction, RisingEdgeForPositions, RisingEdgePolynomFit, TimeOverThreshold,
      PhotonChargeTimeOverThreshold, HandleSaturation, CorrectPixelDelays-->
      <include url="classpath:/default/data/extraction.xml" />
      <!-- Output: photoncharge, arrivalTime -->

      <!-- Cleaning -->
      <!-- SourcePosition(Cetatauri), CoreNeighborCleanTimeNeighbor-->
      <include url="classpath:/default/data/cleaning.xml" />
      <!-- Output: shower -->

      <fact.features.source.SourcePosition
          outputKey="Cetatauri"
          sourceRightAscension="5.627416667"
          sourceDeclination="21.1425"
          auxService="auxService"
      />

      <fact.cleaning.TwoLevelTimeNeighbor
          calibService="calibService"
          photonChargeKey="photoncharge"
          outputKey="shower"
          arrivalTimeKey="arrivalTime"
          corePixelThreshold="${twoLevelTimeNeighbor_coreThreshold}"
          neighborPixelThreshold="${twoLevelTimeNeighbor_neighborThreshold}"
          timeLimit="${twoLevelTimeNeighbor_timeLimit}"
          minNumberOfPixel="${twoLevelTimeNeighbor_minNumberOfPixel}"
          starPositionKeys="Cetatauri"
          starRadiusInCamera="11.0"
          showDifferentCleaningSets="true"
      />

      <fact.io.JSONWriter keys="shower,shower*" url="${outfile}" />
    </process>
</container>
