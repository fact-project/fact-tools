<container>

<property name="data" value="/home/max_noethe/fact-daten/20120809_016.fits.gz" /> 
<property name="dataDRS" value="/home/max_noethe/fact-daten/test300samples2.drs.fits.gz" />
<!-- <property name="data" value="/media/MaxExterne/fact-daten/Daten/20121122_178.fits.gz" />  -->
<!-- <property name="dataDRS" value="/media/MaxExterne/fact-daten/Daten/20121122_167.drs.fits.gz" /> -->
<!-- <property name="data" value="/home/max_noethe/fact-daten/20121218_108.fits.gz" />  -->
<!-- <property name="dataDRS" value="/home/max_noethe/fact-daten/20121218_095.drs.fits.gz" /> -->

<property name="outfile" value="/home/max_noethe/fact-daten/test.csv" />
<property name="outfileCut" value="/home/max_noethe/fact-daten/test_Cut.csv" />
<property name="outfilePhotonCharge" value="/home/max_noethe/fact-daten/test_photonCharge.csv" />
<property name="outfileArrivalTime" value="/home/max_noethe/fact-daten/test_arrivalTime.csv" />
<property name="outfileRingPixel" value="/home/max_noethe/fact-daten/test_ringPixel.csv" />


    <stream id="fact" class="fact.io.FitsStream" url="file:${data}" />
            
        <process  input="fact"> 
        
<!-- 			<fact.utils.PreviousStartCells startCellKey="StartCellData" outputKey="prevEvents" limitEvents="5"/> -->
        	<stream.flow.Skip condition="%{data.TriggerType} != 4" />
        	<stream.flow.Skip condition="%{data.EventNum} != 33" />
       		<fact.utils.Remapping key="Data" outputKey="Data" />
            <fact.filter.DrsCalibration url="file:${dataDRS}" key="Data"  outputKey="DataCalibrated"/>  
<!--             <fact.datacorrection.PatchJumpRemoval dataKey="DataCalibrated" outputKey="DataCalibrated" color="#E6172F" outputJumpsKey="j" prevEventsKey="prevEvents" startCellKey="StartCellData" jumpLimit="2.0" /> -->
<!--         	<fact.filter.RemoveSpikesMars key="DataCalibrated" outputkey="DataCalibrated" />	 -->
<!--             <fact.datacorrection.InterpolateBadPixel key="DataCalibrated"  outputKey="DataCalibrated" -->
<!--                 badChidIds="863,868,297,927,80,873,1093,1094,527,528,721,722" /> -->
                

            <fact.extraction.MaxAmplitudePosition key="DataCalibrated" searchWindowLeft="25" searchWindowRight="125" outputKey="AmplitudePositions" />
            <fact.extraction.RisingEdgeForPositions dataKey="DataCalibrated" amplitudePositionsKey="AmplitudePositions" outputKey="ArrivalTime"/>
            <fact.extraction.PhotonCharge key="DataCalibrated" positions="AmplitudePositions" outputKey="photonCharge" />

            <fact.cleaning.CoreNeighborClean key="photonCharge" keyPositions="ArrivalTime" timeThreshold="15" minNumberOfPixel="2" 
            									corePixelThreshold="4.0" neighborPixelThreshold="2.0" outputKey="cleanPixel" />

			<Skip condition="%{data.cleanPixel}==null"/>
			<fact.features.NumberOfPixelInShower showerKey="cleanPixel" outputKey="numPixelInRing" />
			<Skip condition="%{data.numPixelInRing} &lt; 15" />

		
			<fact.features.MuonHoughTransform showRingKey="true"  showMatrixKey="true" bestCircleKey="bestRing" ringKey="cleanPixel" photonChargeKey="photonCharge" 
											octantsHitKey="octantsHit"  bestRadiusKey="bestRadius" bestXKey="bestX" 
											bestYKey="bestY" bestRingPixelKey="bestRingPixel" distanceKey="houghDistance" 
											peaknessKey="houghPeakness"	percentageKey="houghPercentage" />
			
		
			
			<fact.cleaning.MuonRingClean ringPixelKey="bestRingPixel" photonChargekey="photonCharge" arrivalTimeKey="ArrivalTime" photonChargeThreshold="2" timeThreshold="20" outputKey="cleanRingPixel2"/>
			<fact.cleaning.MuonRingClean ringPixelKey="bestRingPixel" photonChargekey="photonCharge" arrivalTimeKey="ArrivalTime" photonChargeThreshold="3" timeThreshold="20" outputKey="cleanRingPixel3"/>
			<fact.cleaning.MuonRingClean ringPixelKey="bestRingPixel" photonChargekey="photonCharge" arrivalTimeKey="ArrivalTime" photonChargeThreshold="4" timeThreshold="20" outputKey="cleanRingPixel4"/>
			<fact.cleaning.MuonRingClean ringPixelKey="bestRingPixel" photonChargekey="photonCharge" arrivalTimeKey="ArrivalTime" photonChargeThreshold="6" timeThreshold="20" outputKey="cleanRingPixel6"/>
			<fact.cleaning.MuonRingClean ringPixelKey="bestRingPixel" photonChargekey="photonCharge" arrivalTimeKey="ArrivalTime" photonChargeThreshold="8" timeThreshold="20" outputKey="cleanRingPixel8"/>
			<fact.cleaning.MuonRingClean ringPixelKey="bestRingPixel" photonChargekey="photonCharge" arrivalTimeKey="ArrivalTime" photonChargeThreshold="10" timeThreshold="20" outputKey="cleanRingPixel10"/>



			<fact.features.Leakage shower="cleanPixel" weights="photonCharge" outputKey="Leakage" />
<!-- 			<fact.features.DistributionFromShower pixel="cleanPixel" weights="photonCharge" outputKey="Distribution" /> -->
			<fact.features.Size showerKey="cleanRingPixel" photonChargeKey="photonCharge" outputKey="Size" />

<!-- 			<fact.features.HillasConcentration weights="photonCharge" shower="cleanPixel" outputKey="Concentration" /> -->
<!-- 			<fact.features.HillasLength distribution="Distribution" outputKey="Length"/> -->
<!-- 			<fact.features.HillasWidth distribution="Distribution" outputKey="Width"/> -->

<!-- 			<fact.features.NumberOfIslands key="cleanPixel" outputKey="NumIslands" /> -->

			<fact.statistics.KeyInShowerDistribution key="ArrivalTime" showerPixelKey="cleanRingPixel2" outputKey="RingArrivalTime2" />
			<fact.statistics.KeyInShowerDistribution key="ArrivalTime" showerPixelKey="cleanRingPixel3" outputKey="RingArrivalTime3" />
			<fact.statistics.KeyInShowerDistribution key="ArrivalTime" showerPixelKey="cleanRingPixel4" outputKey="RingArrivalTime4" />
			<fact.statistics.KeyInShowerDistribution key="ArrivalTime" showerPixelKey="cleanRingPixel5" outputKey="RingArrivalTime6" />
			<fact.statistics.KeyInShowerDistribution key="ArrivalTime" showerPixelKey="cleanRingPixel6" outputKey="RingArrivalTime8" />
			<fact.statistics.KeyInShowerDistribution key="ArrivalTime" showerPixelKey="cleanRingPixel7" outputKey="RingArrivalTime10" />
			
<!-- 			<fact.statistics.KeyInShowerDistribution key="ArrivalTime" showerPixelKey="cleanPixel" outputKey="cleanArrivalTime" /> -->
			<fact.features.NumberOfPixelInShower showerKey="cleanRingPixel" outputKey="numPixelInRing" />
			
			<stream.io.CsvWriter url="file:${outfile}" keys="houghPeakness,houghDistance,houghPercentage,octantsHit,Size,Leakage,Leakage2,numPixelInRing,RingArrivalTimeMean,RingArrivalTimeStdDev,bestRadius,bestX,bestY,EventNum"/>
				
			<fact.image.ShowImage/> 	
<!-- 			Cuts: -->
			
			<Skip condition="%{data.houghDistance} &gt; 100" />
			<Skip condition="%{data.houghPeakness} &lt; 7" />
			<Skip condition="%{data.houghPercentage} &lt; 0.7" />
			<Skip condition="%{data.Leakage} &gt; 0.05" />
			
<!-- 			Output: -->
			<fact.io.PrintKeysOnConsole keys="houghPeakness,houghDistance,houghPercentage,MCorsikaEvtHeader.fZd,MCorsikaEvtHeader.fAz,MCorsikaEvtHeader.fX,MCorsikaEvtHeader.fY,MCorsikaEvtHeader.fTotalEnergy"/>
		
			
<!-- 			<fact.io.PrintKeysOnConsole keys="houghPeakness,houghDistance,houghPercentage"/> -->
<!-- 			<stream.io.CsvWriter url="file:${outfileCut}" keys="houghPeakness,houghDistance,houghPercentage,octantsHit,Size,Leakage,Leakage2,numPixelInRing,RingArrivalTimeMean,RingArrivalTimeStdDev,bestRadius,bestX,bestY,EventNum" /> -->
<!-- 			<fact.io.RootASCIIWriter url="file:${outfilePhotonCharge}" keys="photonCharge"/> -->
<!-- 			<fact.io.RootASCIIWriter url="file:${outfileArrivalTime}" keys="ArrivalTime"/> -->
<!-- 			<fact.io.RootASCIIWriter url="file:${outfileRingPixel}" keys="cleanRingPixel"/> -->
			<fact.image.ShowImage/> 			
		</process>
</container>
