<container>

    <properties url="classpath:/default/settings_mc.properties" />

    <property name="infile" value="file:src/main/resources/testMcFile.fits.gz" />
    <property name="drsfile" value="file:src/main/resources/testMcDrsFile.drs.fits.gz" />

    <property name="integralGainFile" value="classpath:/default/defaultIntegralGains.csv" />

    <property name="outfile" value="file:/home/fabian/testoutfile_mc.txt" />

    <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />

    <stream id="fact" class="fact.io.FitsStream"  url="${infile}"/>

    <process id="2" input="fact">

        <stream.flow.Skip condition="%{data.TriggerType} != 4" />

        <include url="classpath:/default/mc/calibration_mc.xml" />

        <fact.extraction.BasicExtraction
                dataKey="DataCalibrated"
                outputKeyMaxAmplPos="maxPos"
                outputKeyPhotonCharge="photoncharge"
                url="${integralGainFile}"
                startSearchWindow="${basicExtraction_startSearchWindow}"
                rangeSearchWindow="${basicExtraction_rangeSearchWindow}"
                rangeHalfHeightWindow="${basicExtraction_rangeHalfHeigthWindow}"/>

        <fact.extraction.RisingEdgeForPositions
                dataKey="DataCalibrated"
                outputKey="ArrtimePos"
                amplitudePositionsKey="maxPos"
                maxSlopesKey="maxSlope"/>

        <fact.cleaning.MotionCleaning
                threshold = "30"
                outputKey = "pixelSet"/>

        <Skip condition="%{data.numShowerPixel} &lt; 15 "/>

        <fact.hexmap.ClusterFellwalker
                pixelSetKey="pixelSet"
                minShowerpixel="2"
        />

        <fact.io.PrintKeysOnConsole keys="numCluster,boundRatio,idealBoundDiff,boundAngleSum,distanceCenterSum,neighborCluster,chargeMax,maxClusterNumPixel,numClusterPixel,stdNumPixel,convexity" />


        <Skip condition="%{data.mumCluster} == 0" />


       <!-- <fact.ShowViewer key="DataCalibrated"/>-->

    </process>


</container>
