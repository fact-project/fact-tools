<container>

    <properties url="classpath:/default/settings_mc.properties" />


    <property name="twoLevelTimeNeighbor_coreThreshold" value="5.5" />
    <property name="twoLevelTimeNeighbor_neighborThreshold" value="3.0" />


    <property name="corr_core" value="3"/>
    <property name="corr_neig" value="2.5"/>

    <!-- Pathes to the input files -->

    <property name="infolder" value="file:/Users/lena/Documents/Masterarbeit/FACT_Data/MC/Proton/" />

    <property name="outfolder" value="file:/Users/lena/Documents/Masterarbeit/Cleaning/PerformanceCorrelation/" />
    <property name="filename" value="performance_${corr_core}_${corr_neig}" />
    <property name="label" value="0"/>




    <property name="integralGainFile" value="classpath:/default/defaultIntegralGains.csv" />
    <property name="drsfile" value="classpath:/testMcDrsFile.drs.fits.gz" />

    <!--<property name="drsfile" value="file:/home/llinhoff/testMcDrsFile.drs.fits.gz" />-->


    <service id="auxService" class="fact.auxservice.AuxFileService" auxFolder="file:src/main/resources/aux/" />

    <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />




    <stream id="fact" class="fact.io.RecursiveDirectoryStream"
            pattern="*_Events.fits.gz" url="${infolder}" limit="500">
        <stream class="fact.io.FitsStream" id="_" />
    </stream>




    <process id="2" input="fact">

        <stream.flow.Skip condition="%{data.TriggerType} != 4" />
        <!--<Skip condition="%{data.EventNum} != 3 "/>-->

        <include url="classpath:/default/mc/calibration_mc.xml" />

        <include url="classpath:/default/mc/extraction_mc.xml" />

        <include url="classpath:/default/mc/cleaning_mc.xml" />

        <Skip condition="%{data.shower} == null" />

        <!--<include url="classpath:/default/mc/parameterCalc_mc.xml" />-->

        <!--<include url="classpath:/default/mc/sourceParameter_mc.xml" />-->


        <fact.extraction.MeanCorrelation
                key="DataCalibrated"
                amplitudePositionsKey="maxPos"
                skipLast="50"
        />

        <fact.cleaning.TwoLevelTimeNeighbor
                calibService="calibService"
                photonChargeKey="meanCorrelation"
                outputKey="showerCorrelation"
                arrivalTimeKey="meanCorrelation"
                corePixelThreshold="${corr_core}"
                neighborPixelThreshold="${corr_neig}"
                timeLimit="${twoLevelTimeNeighbor_timeLimit}"
                minNumberOfPixel="${twoLevelTimeNeighbor_minNumberOfPixel}"
        />

        <Skip condition="%{data.showerCorrelation} == null" />


        <fact.features.evaluate.CleaningPerformance
            pixelSetKey="shower"
        />

        <fact.features.evaluate.CleaningPerformance
            pixelSetKey="showerCorrelation"
        />


        <fact.features.SetLabel
                label="${label}"
        />


        <fact.io.JSONWriter keys="MCorsikaEvtHeader.fTotalEnergy,shower_FPR,shower_FNR,showerCorrelation_FPR,showerCorrelation_FNR,shower_precision,shower_recall,showerCorrelation_precision,showerCorrelation_recall" url="${outfolder}${filename}.json"/>


    </process>


</container>
