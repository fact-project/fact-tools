<container>

    <properties url="classpath:/default/settings_mc.properties" />

    <property name="infolder" value="file:/home/lena/Dokumente/Masterarbeit/FACT_Data/MC/Gamma/" />
    <!--    <property name="infolder" value="file:/home/lena/Dokumente/Masterarbeit/FACT_Data/MC/Gamma/" />-->
    <property name="drsfile" value="file:src/main/resources/testMcDrsFile.drs.fits.gz" />

    <property name="outfolder" value="file:/home/lena/Dokumente/Masterarbeit/FellWalker/Separation/" />
    <property name="filename" value="test_std" />
    <property name="label" value="1"/>

    <property name="integralGainFile" value="classpath:/default/defaultIntegralGains.csv" />

   <!-- <property name="outfile" value="file:/home/fabian/testoutfile_mc.txt" />-->

    <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />

    <stream id="fact" class="fact.io.RecursiveDirectoryStream"
            pattern="*_Events.fits.gz"  url="${infolder}" limit="50000">
        <stream class="fact.io.FitsStream" id="_" />
    </stream>

    <process id="2" input="fact">

        <stream.flow.Skip condition="%{data.TriggerType} != 4" />


        <include url="classpath:/default/mc/calibration_mc.xml" />


        <include url="classpath:/default/mc/extraction_mc.xml" />


        <include url="classpath:/default/mc/cleaning_mc.xml" />


        <include url="classpath:/default/mc/parameterCalc_mc.xml" />


        <include url="classpath:/default/mc/sourceParameter_mc.xml" />


        <fact.features.SetLabel
                label="${label}"
        />


        <fact.io.JSONWriter keys="MCorsikaEvtHeader.fTotalEnergy,${stat_allPix_param},${stat_phCharge_param},${stat_arrTime_param},${stat_maxSlopes_param},${stat_arrTimePos_param},${stat_maxSlopesPos_param},${stat_maxPos_param},${spread_param},${shower_param},${conc_param},Theta,Alpha,Distance,CosDeltaAlpha,label" url="${outfolder}${filename}.json"/>


    </process>


</container>
