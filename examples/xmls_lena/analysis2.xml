<container>

	<properties url="classpath:/default/settings.properties" />

<!--    <property name="infile" value="file:/home/lena/Dokumente/Masterarbeit/FACT_Data/20141214_125.fits.fz" />
    <property name="drsfile" value="file:/home/lena/Dokumente/Masterarbeit/FACT_Data/20141214_121.drs.fits.gz" />-->


<!--    <property name="infile" value="file:/home/lena/Dokumente/Masterarbeit/FACT_Data/20150608_055.fits.fz" />
    <property name="drsfile" value="file:/home/lena/Dokumente/Masterarbeit/FACT_Data/20150608_044.drs.fits.gz" />-->


    <property name="infile" value="file:/home/lena/Dokumente/Masterarbeit/FACT_Data/4/20150811_019.fits.fz" />
    <property name="drsfile" value="file:/home/lena/Dokumente/Masterarbeit/FACT_Data/4/20150811_007.drs.fits.gz" />
    <property name="integralGainFile" value="classpath:/default/gain_sorted_20131127.csv" />


    <!--<property name="outfile" value="file:/home/fabian/testoutfile.txt" />-->

    <service id="auxService" class="fact.auxservice.AuxFileService" auxFolder="file:src/main/resources/aux/" />

    <!--In case you want to analyze .zfits files.-->
    <!--<stream id="fact" class="fact.io.zfits.ZFitsStream"  url="${infile}"/>-->

    <stream id="fact" class="fact.io.zfits.ZFitsStream"  url="${infile}"/> <!-- limit = "200"/>-->  <!--  fact.io.FitsStream-->

    <process id="2" input="fact">

        <Skip condition="%{data.EventNum}!=137"/>

    <fact.utils.PreviousEventInfo
                startCellKey="StartCellData"
                outputKey="prevEvents"
                limitEvents="10"
                />


<!--        <include url="classpath:/default/data/prevEventAndSkip.xml" />-->
        <include url="classpath:/default/data/calibration.xml" />
      <!--  <include url="classpath:/default/data/extraction.xml" />-->
<!--        <include url="classpath:/default/data/cleaning.xml" />-->
     <!--   <fact.cleaning.TwoLevelTimeNeighbor photonChargeKey="10" arrivalTimeKey="1" corePixelThreshold="15" neighborPixelThreshold="5" timeLimit="0.5" minNumberOfPixel="6" outputKey="DataClean"/>-->




        <fact.extraction.BasicExtraction
                dataKey="DataCalibrated"
                outputKeyMaxAmplPos="maxPos"
                outputKeyPhotonCharge="photoncharge"
                url="${integralGainFile}"
                startSearchWindow="${basicExtraction_startSearchWindow}"
                rangeSearchWindow="${basicExtraction_rangeSearchWindow}"
                rangeHalfHeightWindow="${basicExtraction_rangeHalfHeigthWindow}"/>

        <fact.extraction.RisingEdgeForPositions
                dataKey="DataCalibrated"
                outputKey="ArrtimePos"
                amplitudePositionsKey="maxPos"
                maxSlopesKey="maxSlope"/>

        <!--<fact.lightpulser.BrightnessStatistics />-->

        <fact.cleaning.MotionCleaning />
        <Skip condition="%{data.NumClusterPixel}>-50 "/>

        <!--<fact.io.JSONWriter keys="NIGHT,EventNum,NumClusterPixel,Cleaning" url="file:/home/lena/Dokumente/Masterarbeit/FellWalker/ClusterIdPlot/cleaning.json" />-->

        <fact.hexmap.FellWalker />


<!--       &lt;!&ndash; <fact.statistics.ArrayMean key="maxAmplitude" outputKey="maxAmplitudeMean" />-->
       <!-- <stream.io.CsvWriter keys="AzPointing,ZdPointing,NIGHT,EventNum,Brightness,PulsArrivalTime" url="file:/home/lena/Dokumente/Masterarbeit/LightPulser/Brightness_20141001_128.txt" />-->

      <!--  <fact.io.JSONWriter keys="NIGHT,EventNum,NumClusterPixel,BrightnessPixel,ClusterID,Cleaning" url="file:/home/lena/Dokumente/Masterarbeit/FellWalker/ClusterIdPlot/ersterVersuch.json" />--> <!--,NumCluster,NumClusterPixel-->
        <!--<PrintData/>-->
        <fact.ShowViewer key="DataCalibrated"/>
      <!--<fact.io.RootASCIIWriter url="${outfile}" keys="${keysForOutput}" />-->

    </process>


</container>
