<container>

    <!-- Pathes to the input files -->
    <property name="infile" value="src/test/resources/testDataFile.fits.gz" />
    <property name="drsfile" value="src/test/resources/testDrsFile.drs.fits.gz" />
    <!--<property name="infile" value="/Users/Kai/Data/20131124_134.fits.fz" />-->

    <!--<property name="drsfile" value="/Users/Kai/Data/20131124_140.drs.fits.gz" />-->


    <property name="drivefile" value="src/test/resources/testDriveFile.fits" />

    <property name="drstimefile" value="src/test/resources/testDrsTimeFile.drs.time.fits" />

    <property name="integralGainFile" value="src/main/resources/gain_sorted_20131127.csv" />
    <property name="pixelDelayFile" value="src/main/resources/delays_20141114.csv" />

    <property name="sourcename" value="crab" />
    <property name="core_threshold" value="7.0" />
    <property name="neighbor_threshold" value="4.5"/>
    <property name="time_limit" value="10.0" />
    <property name="min_number_of_pixel" value="2" />
    <property name="start_search_window" value="35" />
    <property name="range_search_window" value="60" />


    <!-- Name of the stream and url to the input file -->
    <stream id="fact" class="fact.io.zfits.ZFitsStream"  url="file:${infile}"/>

    <!-- Description of the process and the corresponding stream -->
    <process id="2" input="fact">
        <fact.utils.PreviousEventInfo
                startCellKey="StartCellData"
                outputKey="prevEvents"
                limitEvents="10"
                />
        <!-- <stream.flow.Skip condition="%{data.EventNum} &lt; 0" /> -->
        <!-- <stream.flow.Skip condition="%{data.TriggerType} != 1024" /> -->

        <fact.io.zfits.ZFitsDrsCalib
                url="file:${infile}"
                optional="false"
                outputKey="DataZCal"
                />
        <fact.filter.DrsCalibration
                url="file:${drsfile}"
                key="DataZCal"
                outputKey="DataCalibrated"
                />
        <fact.datacorrection.PatchJumpRemoval
                dataKey="DataCalibrated"
                outputKey="DataCalibrated"
                prevEventsKey="prevEvents"
                startCellKey="StartCellData"
                jumpLimit="2.0"
                />
        <fact.datacorrection.RemoveSpikes
                dataKey="DataCalibrated"
                outputKey="DataCalibrated"
                startCellKey="StartCellData"
                leftBorder="6"
                spikeLimit="20"
                topSlopeLimit="16"
                maxSpikeLength="4"
                />
        <fact.filter.DrsTimeCalibration
                url="file:${drstimefile}"
                drsTimeKey="SamplingTimeDeviation"
                outputKey="timeCalibConst"
                />
        <fact.filter.ArrayTimeCorrection
                dataKey="DataCalibrated"
                timeCalibConstKey="timeCalibConst"
                outputKey="DataCalibratedFabian"
                />

        <fact.datacorrection.DrsTimeCalibration
                dataKey="DataCalibrated"
                outputKey="DataCalibrationNeu"
                url="file:${drstimefile}"
                />

        <fact.datacorrection.InterpolateBadPixel
                key="DataCalibrated"
                outputKey="DataCalibrated"
                badChidIds="863,868,297,927,80,873,1093,1094,527,528,721,722"
                />

        <include file="examples/stdAnalysis/data/extraction.xml" />

        <include file="examples/stdAnalysis/data/cleaning.xml" />


        <!-- <Skip condition="%{data.shower} == null" /> -->
        <PrintData />
        <fact.ShowViewer key="DataCalibrated"/>


    </process>


</container>
