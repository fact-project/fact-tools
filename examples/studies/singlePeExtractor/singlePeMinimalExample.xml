<container>

    <properties url="classpath:/default/settings.properties" />

    <property name="infile" value="classpath:/testDataFile.fits.gz" />
    <property name="drsfile" value="classpath:/testDrsFile.drs.fits.gz" />

    <property name="pixelDelayFile" value="classpath:/default/delays_lightpulser_20150217.csv" />

    <property name="output" value="file:testoutfile.json" />

    <property name="auxFolder" value="file:src/main/resources/aux/" />
    <service id="auxService" class="fact.auxservice.AuxFileService" auxFolder="${auxFolder}" />

    <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />
    <service id="gainService" class="fact.gainservice.GainService" />

    <stream id="fact" class="fact.io.hdureader.FITSStream" url="${infile}"/>

    <process id="2" input="fact">
      <include url="classpath:/analysis/init.xml" />
      <!-- This skips events created by our malfunctioning LED light pulser (27s Events) --> 
      <Skip condition="%{data.saturated_slices_percentage} &gt; 0.2" />

      <include url="classpath:/analysis/calibration.xml" />
      <!-- Output: DataCalibrated -->

      <!-- Single Pe Extraction -->
      <fact.photonstream.SinglePulseExtraction
              dataKey="DataCalibrated"
              outputKey="PhotonArrivals"
      />

      <!-- Data Time Series Reconstruction from Single Pe Data -->
      <fact.photonstream.ConvertSinglePulses2Timeseries
              singlePulsesKey="PhotonArrivals"
              baseLineKey="PhotonArrivalsBaseLine"
              timeSeriesKey="DataReconstructed"
      />

      <!--<fact.ShowViewer key="DataCalibrated" />-->

      <!--<fact.io.JSONWriter keys="${keysForOutput}"-->
                          <!--url="${output}"-->
                          <!--writeListOfItems="True"-->
                          <!--pixelSetsAsInt="True"-->
      <!--/>-->
    </process>
</container>
