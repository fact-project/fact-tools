<container>

    <properties url="classpath:/default/settings.properties" />

    <property name="infile" value="file:src/main/resources/testDataFile.fits.gz" />
    <property name="drsfile" value="file:src/main/resources/testDrsFile.drs.fits.gz" />

    <property name="integralGainFile" value="classpath:/default/gain_sorted_20131127.csv" />
    <property name="pixelDelayFile" value="classpath:/default/delays_lightpulser_20150217.csv" />

    <property name="output" value="file:testoutfile.json" />

    <property name="auxFolder" value="file:src/main/resources/aux/" />
    <service id="auxService" class="fact.auxservice.AuxFileService" auxFolder="${auxFolder}" />

    <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />

    <!--In case you want to analyze .zfits files.-->
    <!-- <stream id="fact" class="fact.io.zfits.ZFitsStream"  url="${infile}"/> -->

    <stream id="fact" class="fact.io.hdureader.FITSStream" url="${infile}"/>

    <process id="2" input="fact">
	<fact.extraction.SaturatedSlicesPercentage />
	<Skip condition="%{data.saturatedSlicesPercentage} &gt; 0.2" />
        <!-- prevEventAndSkip: -->
        <!-- PreviousEventInfo, Skip(no Data Trigger) -->
        <include url="classpath:/default/data/prevEventAndSkip.xml" />
        <!-- Output: Data -->

        <!-- Calibration: -->
        <!-- DrsCalibration, PatchJumpRemoval, RemoveSpikes,
        DrsTimeCalibration, InterpolateBadPixel -->
        <include url="classpath:/default/data/calibration.xml" />
        <!-- Output: DataCalibrated -->

        <!-- Single Pe Extraction -->
        <fact.photonstream.SinglePulseExtraction
                dataKey="DataCalibrated"
                outputKey="PhotonArrivals"
        />

        <!-- Data Time Series Reconstruction from Single Pe Data -->
        <fact.photonstream.ConvertSinglePulses2Timeseries
                singlePulsesKey="PhotonArrivals"
                baseLineKey="PhotonArrivalsBaseLine"
                timeSeriesKey="DataReconstructed"
        />

        <!--<fact.ShowViewer key="DataCalibrated" />-->

        <!--<fact.io.JSONWriter keys="${keysForOutput}"-->
                            <!--url="${output}"-->
                            <!--writeListOfItems="True"-->
                            <!--pixelSetsAsInt="True"-->
        <!--/>-->
    </process>
</container>
