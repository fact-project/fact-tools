<container>

    <properties url="classpath:/default/settings.properties" />
    <property name="infile" value="file:src/main/resources/testDataFile.fits.gz" />
    <property name="drsfile" value="file:src/main/resources/testDrsFile.drs.fits.gz" />

    <property name="integral_gain_file" value="classpath:/default/gain_sorted_20131127.csv" />
    <property name="pixel_delay_file" value="classpath:/default/delays_lightpulser_20150217.csv" />

    <property name="output" value="file:testoutfile.json" />

    <property name="aux_folder" value="file:src/main/resources/aux/" />
    <service id="aux_service" class="fact.auxservice.AuxFileService" auxFolder="${aux_folder}" />

    <service id="calib_service" class="fact.calibrationservice.ConstantCalibService" />

    <!--In case you want to analyze .zfits files.-->
    <!-- <stream id="fact" class="fact.io.zfits.ZFitsStream"  url="${infile}"/> -->

    <stream id="fact" class="fact.io.hdureader.FITSStream" url="${infile}"/>

    <process id="2" input="fact">
        <!-- prevEventAndSkip: -->
        <!-- PreviousEventInfo, Skip(no Data Trigger) -->
        <fact.utils.PreviousEventInfo
                startCellKey="StartCellData"
                outputKey="prev_events"
                limitEvents="${prev_events_limit_events}"
        />
        <stream.flow.Skip condition="%{data.TriggerType} != 4" />
        <!-- Output: Data -->

        <!-- Calibration: -->
        <!-- DrsCalibration, PatchJumpRemoval, RemoveSpikes,
        DrsTimeCalibration, ArrayTimeCorrection, InterpolateBadPixel -->
        <fact.datacorrection.DrsCalibration
                url="${drsfile}"
                key="Data"
                outputKey="data_calibrated"
        />
        <fact.datacorrection.PatchJumpRemoval
                dataKey="data_calibrated"
                outputKey="data_calibrated"
                prevEventsKey="prev_events"
                startCellKey="StartCellData"
                jumpLimit="${patch_jump_removal_jump_limit}"
        />
        <fact.datacorrection.RemoveSpikes
                dataKey="data_calibrated"
                outputKey="data_calibrated"
                startCellKey="StartCellData"
                leftBorder="${remove_spikes_left_border}"
                spikeLimit="${remove_spikes_spike_limit}"
                topSlopeLimit="${remove_spikes_top_slope_limit}"
                maxSpikeLength="${remove_spikes_max_spike_length}"
        />
        <fact.filter.DrsTimeCalibration
                outputKey="time_calib_const"
        />
        <fact.filter.ArrayTimeCorrection
                dataKey="data_calibrated"
                timeCalibConstKey="time_calib_const"
                outputKey="data_calibrated"
        />
        <fact.datacorrection.InterpolateTimeSeries
                calibService="calib_service"
                dataKey="data_calibrated"
                dataOutputKey="data_calibrated"
        />
        <!-- Output: DataCalibrated -->

        <!-- Single Pe Extraction -->
        <fact.photonstream.SinglePulseExtraction
                dataKey="data_calibrated"
                outputKey="PhotonArrivals"
        />

        <!-- Data Time Series Reconstruction from Single Pe Data -->
        <fact.photonstream.ConvertSinglePulses2Timeseries
                singlePulsesKey="PhotonArrivals"
                baseLineKey="PhotonArrivalsBaseLine"
                timeSeriesKey="DataReconstructed"
        />

        <!--<fact.ShowViewer key="data_calibrated" />-->

        <!--<fact.io.JSONWriter keys="${keys_for_output}"-->
        <!--url="${output}"-->
        <!--writeListOfItems="True"-->
        <!--pixelSetsAsInt="True"-->
        <!--/>-->
    </process>
</container>
