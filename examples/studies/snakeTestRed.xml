<container>

    <!-- Pfade zu den fits files. -->
	<property name="infile" value="20121017_145.fits.gz" />
	<property name="drsfile" value="20121017_135.drs.fits.gz" />
	<property name="drivefile" value="20121017.DRIVE_CONTROL_TRACKING_POSITION.fits" />
	<property name="outfileSnake" value="/home/$USER/ftSnaketest.csv" />
	
	<property name="integralGainFile" value="src/main/resources/gain_sorted_20131127.csv" />
	
    <property name="sourcename" value="crab" />
    <property name="core_threshold" value="5.0" />
    <property name="neighbor_threshold" value="2.0"/>
    <property name="time_threshold" value="30.0" />
    <property name="min_number_of_pixel" value="2" />
    <property name="integral_gain" value="242.0" />
    
    <property name="start_search_window" value="35" />
    <property name="range_search_window" value="60" />


    <!-- Name des Streams und pfad zu dem Daten-File -->
    <stream id="fact" class="fact.io.FitsStream"  url="file:${infile}" limit="100"/>

    <!-- Beschreibung des zu bearbeitenden Prozesses und zu welchem Stream fieser geh�rt -->
    <process id="2" input="fact">		
        <fact.utils.PreviousEventInfo
		    startCellKey="StartCellData"
		    outputKey="prevEvents"
		    limitEvents="20"
		/>
		<stream.flow.Skip condition="%{data.TriggerType} != 4" />
        <fact.filter.DrsCalibration url="file:${drsfile}" key="Data"  outputKey="DataCalibrated" color="#000000"/>  
        <fact.datacorrection.PatchJumpRemoval
		    dataKey="DataCalibrated"
		    outputKey="DataCalibrated"
		    prevEventsKey="prevEvents"
		    startCellKey="StartCellData"
		    jumpLimit="2.0"
		/>
        <fact.datacorrection.RemoveSpikes
		    dataKey="DataCalibrated"
		    outputKey="DataCalibrated"
		    startCellKey="StartCellData"
		    leftBorder="6"
		    spikeLimit="20"
		    topSlopeLimit="16"
		    maxSpikeLength="4"
	    />
		
		<fact.datacorrection.InterpolateBadPixel key="DataCalibrated"  outputKey="DataCalibrated"
                badChidIds="863,868,297,927,80,873,1093,1094,527,528,721,722" />
                
        <fact.extraction.BasicExtraction
        	dataKey="DataCalibrated" 
        	outputKeyMaxAmplPos="maxAmplitudePosition"
        	outputKeyPhotonCharge="photoncharge" 
        	url="${integral_gain}"
        	startSearchWindow="35"
        	rangeSearchWindow="90"
        	rangeHalfHeightWindow="25"
        />        
		
        <fact.extraction.RisingEdgeForPositions dataKey="DataCalibrated" amplitudePositionsKey="maxAmplitudePosition" outputKey="arrivalTime" />

        <fact.cleaning.TwoLevelTimeMedian key="photoncharge" outputKey="shower" keyPositions="arrivalTime" corePixelThreshold="${core_threshold}" neighborPixelThreshold="${neighbor_threshold}" timeThreshold="${time_threshold}"  minNumberOfPixel="${min_number_of_pixel}"/>
				
        <Skip condition="%{data.shower} == null" />    

			
			<!-- Snake with PhotonCharge: -->
			<!-- Bei DrawSnake und DrawEllipse handelt es sich um Ausgaben für den Viewer, diese sollten (wenn nicht gebraucht) entfernt werden-->
								
			<fact.snake.MeanWithoutShower Key="photoncharge" Shower="shower" Outkey="MeanWithoutShower" />
			<fact.snake.WeightedShowerCenter  Shower="shower" Weight="photoncharge" OutkeyX="snakeStartX" OutkeyY="snakeStartY" />        
			
			<fact.cleaning.snake.SnakeSingle DrawSnake="" PixelDataName="photoncharge" ShowerCenterX="snakeStartX" ShowerCenterY="snakeStartY" SnakeOutX="snake_X" SnakeOutY="snake_Y" Mean="MeanWithoutShower"  NumberOfVerticesOut="NumberOfVertices"/>	

			<fact.features.snake.PolygonArea PolygonX="snake_X" PolygonY="snake_Y" Outkey="SnakeArea" />
			<fact.features.snake.PolygonLength PolygonX="snake_X" PolygonY="snake_Y" Outkey="SnakeLength" />
			<fact.features.snake.PolygonCenter PolygonX="snake_X" PolygonY="snake_Y" OutkeyX="PolygonCenterX" OutkeyY="PolygonCenterY"/>
			<fact.features.snake.PolygonIntegrate Key="photoncharge" PolygonX="snake_X" PolygonY="snake_Y" Outkey="SnakeInt" OutkeyNumberOfPixel="PixelInSnake" OutkeyPixelList="shower_snake"/>
			<fact.features.snake.InnerEnergy SnakeX="snake_X" SnakeY="snake_Y" Outkey="InnerEnergy" />
			
			<fact.features.snake.FitEllipse DrawEllipse="" SnakeX="snake_X" SnakeY="snake_Y" OutkeyAlpha="SnakeEllipseAlpha" OutkeyMajor="SnakeEllipseMajor" OutkeyMinor="SnakeEllipseMinor" OutkeyCenterX="SnakeEllipseX" OutkeyCenterY="SnakeEllipseY" />
			
			
			
			<fact.io.PrintKeysOnConsole keys="EventNum,MeanWithoutShower,snakeStartX,snakeStartY,NumberOfVertices,SnakeArea,SnakeLength,PolygonCenterX,PolygonCenterY,SnakeInt,PixelInSnake,InnerEnergy,SnakeEllipseAlpha,SnakeEllipseMajor,SnakeEllipseMinor,SnakeEllipseX,SnakeEllipseY"/>

			<fact.image.ShowImage/>
			
		
           <!-- <fact.io.RootASCIIWriter url="file:${outfile}" keys="EventNum,MeanWithoutShower,snakeStartX,snakeStartY,NumberOfVertices,SnakeArea,SnakeLength,PolygonCenterX,PolygonCenterY,SnakeInt,PixelInSnake,InnerEnergy,SnakeEllipseAlpha,SnakeEllipseMajor,SnakeEllipseMinor,SnakeEllipseX,SnakeEllipseY"/> -->
			

    </process>


</container>
