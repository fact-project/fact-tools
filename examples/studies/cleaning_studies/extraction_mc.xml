<container>

    <properties url="classpath:/default/settings_mc.properties" />

    <property name="integralGainFile" value="classpath:/default/defaultIntegralGains.csv" />

    <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />

    <stream id="fact" class="fact.io.FactFileListMultiStream"   url="${input}">
        <stream class="fact.io.hdureader.FITSStream" id="_" />
    </stream>

    <process id="1" input="fact">

		<stream.flow.Skip condition="%{data.TriggerType} != 4" />


        <fact.utils.Remapping
                key="Data"
                outputKey="Data"
        />
        <fact.utils.RemappingKeys
                keys="McCherPhotWeight,McCherPhotNumber,McMuonCherPhotWeight,McNoisePhotWeight,McCherArrTimeMean,McCherArrTimeVar,McCherArrTimeMin,McCherArrTimeMax"
        />

        <fact.datacorrection.DrsCalibration
                key="Data"
                outputKey="DataCalibrated"
        />

        <fact.datacorrection.RemoveSpikes
                dataKey="DataCalibrated"
                outputKey="DataCalibrated"
                startCellKey="StartCellData"
                leftBorder="${removeSpikes_leftBorder}"
                spikeLimit="${removeSpikes_spikeLimit}"
                topSlopeLimit="${removeSpikes_topSlopeLimit}"
                maxSpikeLength="${removeSpikes_maxSpikeLength}"
        />
        <fact.datacorrection.InterpolateTimeSeries
                calibService="calibService"
                dataKey="DataCalibrated"
                dataOutputKey="DataCalibrated"
        />

        <!-- Extraction -->
        <!-- BasicExtraction, RisingEdgeForPositions, RisingEdgePolynomFit, TimeOverThreshold,
        PhotonChargeTimeOverThreshold, HandleSaturation, CorrectPixelDelays-->
        <include url="classpath:/default/mc/extraction_mc.xml" />
        <!-- Output: photoncharge, arrivalTime -->

        <fact.extraction.WaveformFluctuation
                key="DataCalibrated"
                outputKey="ped"
                skipFirst="35"
                skipLast="100"
                windowSize="30"
        />

        <fact.extraction.NeighborPixelCorrelation
                key="DataCalibrated"
                amplitudePositionsKey="maxPos"
                returnScaledCorrelation="true"
        />

        <fact.filter.GaussConvolution
                key="DataCalibrated"
                variance="2"
                outputKey="DataSmoothed"
                />

        <fact.statistics.TimeseriesFeatures
                dataKey="DataCalibrated"
                movingAverageKey="DataSmoothed"
                outputKey="TS"
        />

        <fact.extraction.NeighborPixelDCF
                key="DataCalibrated"
                noiseKey="TS_std"
        />
        <!--<PrintData/>-->
        <!--<fact.ShowViewer key="DataCalibrated" />-->
        <fact.io.FITSWriter
                keys="MCorsika*,MMcEvtBasic*,EventNum,TS_*,neighborPixDCF_*,ped_*,NPC*,McCherPhot*,McMuonCherPhot*,McNoisePhot*,maxPos,photoncharge,baseline,timeOverThreshold,arrivalTimeTOT,arrivalTimePos,maxSlopesPos,arrivalTime,maxSlopes"
                url="${output}"
        />
        <!--<fact.io.JSONWriter-->
                <!--keys="TS_*,neighborPixDCF_*,ped_*,NPC*,McCherPhot*,McMuonCherPhot*,McNoisePhot*,maxPos,photoncharge,baseline,timeOverThreshold,arrivalTimeTOT,arrivalTimePos,maxSlopesPos,arrivalTime,maxSlopes"-->
                <!--url="file:test.json"-->
                <!--jsonl="false"-->
                <!--/>-->

    </process>
</container>


