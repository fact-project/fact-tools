<container>

	<properties url="classpath:/default/settings_mc.properties" />

    <property name="infile" value="file:src/main/resources/testMcFile.fits.gz" />
	<property name="drsfile" value="file:src/main/resources/testMcDrsFile.drs.fits.gz" />

    <property name="integralGainFile" value="classpath:/default/defaultIntegralGains.csv" />

    <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />

    <stream id="fact" class="fact.io.hdureader.FITSStream" url="${infile}"/>

    <process id="2" input="fact">

		<stream.flow.Skip condition="%{data.TriggerType} != 4" />
        <!-- Calibration: -->
        <!-- PreviousEventInfo, DrsCalibration, PatchJumpRemoval, RemoveSpikes,
        DrsTimeCalibration, ArrayTimeCorrection, InterpolateBadPixel -->
        <include url="classpath:/default/mc/calibration_mc.xml" />
        <!-- Output: DataCalibrated -->

        <!-- Extraction -->
        <!-- BasicExtraction, RisingEdgeForPositions, RisingEdgePolynomFit, TimeOverThreshold,
        PhotonChargeTimeOverThreshold, HandleSaturation, CorrectPixelDelays-->
        <include url="classpath:/default/mc/extraction_mc.xml" />
        <!-- Output: photoncharge, arrivalTime -->

        <fact.extraction.WaveformFluctuation
                key="DataCalibrated"
                outputKey="ped"
                skipFirst="35"
                skipLast="100"
                windowSize="30"
        />

        <fact.extraction.NeighborPixelCorrelation
                key="DataCalibrated"
                amplitudePositionsKey="maxPos"
                returnScaledCorrelation="true"
        />

        <fact.filter.GaussConvolution
                key="DataCalibrated"
                variance="2"
                outputKey="DataSmoothed"
                />

        <fact.statistics.TimeseriesFeatures
                dataKey="DataCalibrated"
                movingAverageKey="DataSmoothed"
                outputKey="TS"
        />

        <fact.extraction.NeighborPixelDCF
                key="DataCalibrated"
                noiseKey="TS_std"
        />
        <PrintData/>
        <!--<fact.ShowViewer key="DataCalibrated" />-->
        <fact.io.FITSWriter
                keys="TS_*,neighborPixDCF_*,ped_*,NPC*,McCherPhot*,McMuonCherPhot*,McNoisePhot*,maxPos,photoncharge,baseline,baseline_level,timeOverThreshold,arrivalTimeTOT,arrivalTimePos,maxSlopesPos,arrivalTime,maxSlopes"
                url="file:test.fits"
        />
    </process>
</container>


