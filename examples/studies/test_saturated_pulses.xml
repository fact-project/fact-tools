<container>
  <properties url="classpath:/default/settings.properties" />
  <!-- Pathes to the input files -->
  <property name="infile" value="classpath:/testMcFile.fits.gz" />
  <property name="drsfile" value="classpath:/testMcDrsFile.drs.fits.gz" />

  <!-- Name of the stream and url to the input file -->
  <stream id="fact" class="fact.io.hdureader.FITSStream" url="${infile}" />

  <service id="gainService" class="fact.gainservice.GainService" />

  <!-- Description of the process and the corresponding stream -->
  <process id="2" input="fact">
    <!--<stream.flow.Skip condition="%{data.EventNum} &lt; 0" />-->
    <fact.utils.Remapping key="Data" outputKey="Data" />
    <fact.utils.RemappingKeys keys="McCherPhotWeight,McCherPhotNumber,McMuonCherPhotWeight,McNoisePhotWeight,McCherArrTimeMean,McCherArrTimeVar,McCherArrTimeMin,McCherArrTimeMax" />
    <fact.datacorrection.DrsCalibration url="${drsfile}" key="Data" outputKey="DataCalibrated" />
    <fact.datacorrection.RemoveSpikes dataKey="DataCalibrated" outputKey="DataCalibrated" startCellKey="StartCellData" leftBorder="6" spikeLimit="20" topSlopeLimit="16" maxSpikeLength="4" />
    <!--<fact.datacorrection.InterpolateTimeSeries-->
    <!--key="DataCalibrated"-->
    <!--outputKey="DataCalibrated"-->
    <!--badChidIds="863,868,297,927,80,873,1093,1094,527,528,721,722"-->
    <!--/>-->
    <stream.flow.Skip condition="%{data.TriggerType} != 4" />
    <fact.extraction.BasicExtraction dataKey="DataCalibrated" outputKeyMaxAmplPos="maxPos" outputKeyPhotonCharge="photoncharge" gainService="gainService" startSearchWindow="${BasicExtraction.startSearchWindow}"
    rangeSearchWindow="${BasicExtraction.rangeSearchWindow}" rangeHalfHeightWindow="25" />
    <fact.extraction.EstimateBaseline dataKey="DataCalibrated" outputKey="baseline" firstSlice="10" range="40" />
    <fact.extraction.RisingEdgeForPositions dataKey="DataCalibrated" amplitudePositionsKey="maxPos" outputKey="arrivalTimePos" maxSlopesKey="maxSlopesPos" />
    <fact.extraction.RisingEdgePolynomFit dataKey="DataCalibrated" risingEdgeKey="arrivalTimePos" outputKey="arrivalTime" numberOfPoints="11" maxSlopesKey="maxSlopes" />
    <fact.extraction.TimeOverThreshold dataKey="DataCalibrated" outputKey="timeOverThreshold" firstSliceOverThresholdOutputKey="arrivalTimeTOT" positionsKey="maxPos" threshold="1800" thresholdOutputKey="thresholdForToT" />
    <fact.extraction.TimeOverThreshold dataKey="DataCalibrated" outputKey="timeOverThreshold1000" firstSliceOverThresholdOutputKey="arrivalTimeTOT1000" positionsKey="maxPos" threshold="1000" thresholdOutputKey="thresholdForToT1000" />
    <fact.datacorrection.CorrectSaturation dataKey="DataCalibrated" outputKey="DataNoSat" totKey="timeOverThreshold" firstSliceOverThresholdKey="arrivalTimeTOT" threshold="1800" maxPosKey="maxPos" baselineKey="baseline" />
    <fact.extraction.BasicExtraction dataKey="DataNoSat" outputKeyMaxAmplPos="maxPosNoSat" outputKeyPhotonCharge="phChargeNoSat" gainService="gainService" startSearchWindow="${BasicExtraction.startSearchWindow}"
    rangeSearchWindow="${BasicExtraction.rangeSearchWindow}" rangeHalfHeightWindow="25" />
    <fact.extraction.PhotonChargeTimeOverThreshold timeOverThresholdKey="timeOverThreshold" thresholdKey="thresholdForToT" outputKey="photonchargeSaturated" />
    <fact.extraction.PhotonChargeTimeOverThreshold timeOverThresholdKey="timeOverThreshold1000" thresholdKey="thresholdForToT1000" outputKey="photonchargeSaturated1000" />
    <fact.extraction.IdentifyPixelAboveThreshold key="photoncharge" threshold="200" outputKey="pixelAbove200Pe" />
    <!-- <stream.flow.Skip condition="%{data.TriggerType} != 1024" /> -->
    <!-- <stream.flow.Skip condition="%{data.EventNum} &lt; 0" /> -->
    <!-- <stream.flow.Skip condition="%{data.TriggerType} != 1024" /> -->
    <!-- <Skip condition="%{data.shower} == null" /> -->
    <!--<fact.ShowViewer key="DataCalibrated"/>-->
    <!--<fact.io.JSONWriter url="file:${outfile}" keys="timeOverThreshold,timeOverThreshold1000,arrivalTimePos,arrivalTime,arrivalTimeTOT,arrivalTimeTOT1000,maxPos,maxSlopesPos,photoncharge,photonchargeSaturated,photonchargeSaturated1000,MCorsikaEvtHeader.fWeightedNumPhotons,McCherPhotWeight,McCherPhotNumber"/>-->
  </process>
</container>
