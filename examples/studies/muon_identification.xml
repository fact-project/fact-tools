<container>

  <properties url="classpath:/default/settings.properties" />

  <property name="infile" value="classpath:/testDataFile.fits.gz" />
  <property name="drsfile" value="classpath:/testDrsFile.drs.fits.gz" />

  <property name="pixelDelayFile" value="classpath:/default/delays_lightpulser_20150217.csv" />
  <property name="auxpath" value="file:src/main/resources/aux/" />

  <service id="auxService" class="fact.auxservice.AuxFileService" auxFolder="${auxpath}" />
  <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />
  <service id="gainService" class="fact.gainservice.GainService" />

  <property name="outfile" value="facttools.json" />

  <property name="TwoLevelTimeNeighbor.coreThreshold" value="4.0" />
  <property name="TwoLevelTimeNeighbor.neighborThreshold" value="2.0" />
  <property name="TwoLevelTimeNeighbor.timeLimit" value="3.0" />
  <property name="TwoLevelTimeNeighbor.minNumberOfPixel" value="2" />

  <property name="features" value="timestamp,cogX,cogY,ConcCore,delta,EventNum,Leakage,Leakage2,length,m3Long,m3Trans,m4Long,m4Trans,skewnessLong,skewnessTrans,kurtosisLong,kurtosisTrans,NIGHT,numPixelAfterCleaning,PCOUNT,RUNID,RUNTYPE,size,width,arrivalTimeCleaningStatistics_kurtosis,arrivalTimeCleaningStatistics_max,arrivalTimeCleaningStatistics_mean,arrivalTimeCleaningStatistics_min,arrivalTimeCleaningStatistics_skewness,arrivalTimeCleaningStatistics_variance,arrivalTimeStatistics_kurtosis,arrivalTimeStatistics_max,arrivalTimeStatistics_mean,arrivalTimeStatistics_min,arrivalTimeStatistics_skewness,arrivalTimeStatistics_variance,bestR,bestRingPixel,bestX,bestY,shower,conc1,conc2,concCOG,houghCleaningPercentage,houghDistance,houghOctantsHit,houghPeakness,houghRingPercentage,numIslands,photonchargeCleaningStatistics_kurtosis,photonchargeCleaningStatistics_max,photonchargeCleaningStatistics_mean,photonchargeCleaningStatistics_min,photonchargeCleaningStatistics_skewness,photonchargeCleaningStatistics_variance,photonchargeStatistics_kurtosis,photonchargeStatistics_max,photonchargeStatistics_mean,photonchargeStatistics_min,photonchargeStatistics_skewness,photonchargeStatistics_variance,timeOverThreshold_numPixel,ZdPointing,ZdTracking,ZdSourceCalc,Distance,sourceName,gaussianFitX,gaussianFitY,gaussianFitR,gaussianFitSigma,StdDevTime8.0,numPixelStdDevTime8.0"/>

  <property name="outputKeys" value="${features}"/>

  <stream id="fact" class="fact.io.hdureader.FITSStream"  url="${infile}" />

  <process id="2" input="fact">
    <include url="classpath:/analysis/init.xml" />
    <!-- This skips events created by our malfunctioning LED light pulser (27s Events) --> 
    <Skip condition="%{data.saturated_slices_percentage} &gt; 0.2" />
    <!-- Only analyze physics trigger events -->
    <Skip condition="%{data.TriggerType} != 4" />

    <include url="classpath:/analysis/calibration.xml" />
    <include url="classpath:/analysis/extraction.xml" />
    <include url="classpath:/analysis/cleaning.xml" />


    <Skip condition="%{data.shower} == null" />
    <fact.pixelsets.Length pixelSetKey="shower" outputKey="numPixelAfterCleaning" />
    <Skip condition="%{data.numPixelAfterCleaning} &lt; 15" />

    <fact.features.HillasParameters
      weightsKey="photoncharge"
      pixelSetKey="shower"
    />

    <fact.statistics.ArrayStatistics
      key="photoncharge"
      outputKey="photonchargeStatistics"
    />
    <fact.statistics.ArrayStatistics
      key="arrivalTime"
      outputKey="arrivalTimeStatistics"
    />

    <fact.statistics.ArrayStatistics
      key="photoncharge"
      outputKey="photonchargeCleaningStatistics"
      pixelSetKey="shower"
    />
    <fact.statistics.ArrayStatistics
      key="arrivalTime"
      outputKey="arrivalTimeCleaningStatistics"
      pixelSetKey="shower"
    />

    <fact.features.NumberOfIslands
      pixelSetKey="shower"
      outputKey="numIslands"
    />

    <fact.features.Size
      pixelSetKey="shower"
      photonChargeKey="photoncharge"
      outputKey="size"
    />

    <fact.features.Concentration
      weights="photoncharge"
      pixelSetKey="shower"
      concOneOutputKey="conc1"
      concTwoOutputKey="conc2"
    />

    <fact.features.ConcentrationCore
      cogKey="cog"
      pixelSetKey="shower"
      photonChargeKey="photoncharge"
      sizeKey="size"
      widthKey="width"
      lengthKey="length"
      deltaKey="delta"
      outputKey="ConcCore"
    />
    <fact.features.ConcentrationAtCenterOfGravity
      photonChargeKey="photoncharge"
      cogKey="cog"
      sizeKey="size"
      outputKey="concCOG"
    />
    <fact.features.Leakage
      cogKey="cog"
      pixelSetKey="shower"
      weights="photoncharge"
      leakage1OutputKey="Leakage"
      leakage2OutputKey="Leakage2"
    />

    <fact.features.muon.HoughTransform
      showRingKey="false"
      showMatrixKey="false"
      photonChargeKey="photoncharge"
      bestCircleKey="bestRing"
      pixelSetKey="shower"
      peaknessKey="houghPeakness"
      cleaningPercentageKey="houghCleaningPercentage"
      ringPercentageKey="houghRingPercentage"
      distanceKey="houghDistance"
      octantsHitKey="houghOctantsHit"
      bestRingPixelKey="bestRingPixel"
      bestRadiusKey="bestR"
      bestXKey="bestX"
      bestYKey="bestY"
    />

    <fact.features.source.SourcePosition
      outputKey="sourcePositionKey"
      auxService="auxService"
    />

    <fact.features.source.Distance
      cogKey="cog"
      sourcePositionKey="sourcePositionKey"
      outputKey="Distance"
    />

    <fact.features.muon.CircularFit />
    <fact.features.muon.GaussianFit
      startXKey="circFitX"
      startYKey="circFitY"
      startRKey="circFitR"
      />

    <fact.features.muon.RingStandardDeviationWithThreshold threshold="8" />

    <!--<fact.io.JSONWriter  url="file:${outfile}" keys="${outputKeys}" />-->
    <!-- <fact.ShowViewer key="DataCalibrated"/> -->
  </process>
</container>
