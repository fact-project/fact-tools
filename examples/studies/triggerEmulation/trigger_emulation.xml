<container>
  <properties url="classpath:/default/settings.properties" />

  <property name="infile" value="classpath:/testDataFile.fits.gz" />
  <property name="drsfile" value="classpath:/testDrsFile.drs.fits.gz" />
  <property name="auxFolder" value="file:src/main/resources/aux/" />

  <property name="pixelDelayFile" value="classpath:/default/delays_lightpulser_20150217.csv" />

  <property name="outfile" value="file:testTrigger.json" />

  <service id="auxService" class="fact.auxservice.AuxFileService" auxFolder="${auxFolder}" />
  <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />
  <service id="gainService" class="fact.gainservice.GainService" />

  <stream id="fact" class="fact.io.hdureader.FITSStream" url="${infile}"/>

  <process id="2" input="fact">
    <include url="classpath:/analysis/init.xml" />
    <!-- This skips events created by our malfunctioning LED light pulser (27s Events) -->
    <Skip condition="%{data.saturated_slices_percentage} &gt; 0.2" />
    <!-- Only analyze physics trigger events -->
    <Skip condition="%{data.TriggerType} != 4" />

    <include url="classpath:/analysis/calibration.xml" />

    <fact.filter.ShapeSignal
            key="DataCalibrated"
            outputKey="DataShaped"
            shift="20"
            factor="0.96"
    />

    <fact.TriggerEmulation.SumUpPatches
            calibService="calibService"
            key="DataShaped"
            outKey="SummedPatches"
    />

    <fact.TriggerEmulation.EmulateDiscriminator
            key="SummedPatches"
      />
    
    <fact.TriggerEmulation.EmulateLogic
            key="TriggerPrimitives"
            outKey="Decission"
    />

  </process>
</container>
