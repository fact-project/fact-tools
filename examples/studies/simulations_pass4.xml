<container>
    <properties url="classpath:/default/settings.properties" />

    <property name="infile" value="classpath:/ceres_output/18000/00018000.000_D_MonteCarlo018_Events.fits.gz" />
    <property name="drsfile" value="classpath:/testMcDrsFile.drs.fits.gz" />

    <service id="gainService" class="fact.gainservice.GainService" />
    <property name="pixelDelayFile" value="classpath:/default/delays_zero.csv" />

    <property name="out_path_basename" value="test_ceres" />

    <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />

    <stream id="fact" class="fact.io.CeresStream" url="${infile}"/>

    <process id="2" input="fact">
        <include url="classpath:/analysis/init.xml" />
        <include url="classpath:/analysis/calibration.xml" />
        <include url="classpath:/analysis/extraction.xml" />

        <fact.extraction.AboveThreshold
            dataKey="Data"
            threshold="2040"
            outputKey="Saturation"
        />

        <stream.flow.If condition="%{data.SaturationPixelCount} &lt; 100">
            <fact.photonstream.SinglePulseExtraction
                dataKey="DataCalibrated"
                outputKey="PhotonArrivals"
                maxIterations="500"
            />
        </stream.flow.If>
        <stream.flow.If condition="%{data.SaturationPixelCount} &gt; 99">
            <fact.photonstream.SinglePulseExtraction
                dataKey="DataCalibrated"
                outputKey="PhotonArrivals"
                maxIterations="0"
            />
        </stream.flow.If>

        <fact.utils.ElementwiseMultiplyDoubleArray
            inputKey="PhotonArrivalsBaseLine"
            outputKey="CentiBaseLines"
            factor="100.0"
        />

        <fact.utils.CastDoubleArrayToIntArray
            inputKey="CentiBaseLines"
            outputKey="CentiBaseLines"
        />

        <stream.data.RenameKey from="PhotonArrivals" to="PhotonArrivals_500ps"/>
        <stream.data.RenameKey from="Saturation" to="SaturatedPixels"/>
        <stream.data.RenameKey from="MPointingPos.fAz" to="Az_deg"/>
        <stream.data.RenameKey from="MPointingPos.fZd" to="Zd_deg"/>

        <stream.data.RenameKey from="MCorsikaRunHeader.fRunNumber" to="Run"/>
        <stream.data.RenameKey from="MCorsikaEvtHeader.fEvtNumber" to="Event"/>
        <stream.data.RenameKey from="MMcEvt.fEventReuse" to="Reuse"/>

  <!--
        <fact.io.JSONWriter
                keys="
                    Run,
                    Event,
                    Reuse,
                    Az_deg,
                    Zd_deg,
                    PhotonArrivals_500ps,
                    SaturatedPixels
                "
                url="file:${out_path_basename}.phs.jsonl.gz"
                writeListOfItems="true"
                pixelSetsAsInt="true"
                gzip="true"
                jsonl="true"
        />

        <fact.io.JSONWriter
            keys="Run,Event,Reuse,CentiBaseLines"
            url="file:${out_path_basename}.bsl.jsonl.gz"
            writeListOfItems="true"
            pixelSetsAsInt="true"
            gzip="true"
            jsonl="true"
        />
  -->
    </process>
</container>
