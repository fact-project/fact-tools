<container>

    <properties url="classpath:/default/settings.properties" />

    <!-- Pathes to the input files -->
    <property name="infile" value="classpath:/testDataFile.fits.gz" />
    <property name="drsfile" value="classpath:/testDrsFile.drs.fits.gz" />

    <service id="gainService" class="fact.gainservice.GainService" />
    <property name="pixelDelayFile" value="classpath:/default/delays_lightpulser_20150217.csv" />

    <!-- Name of the stream and url to the input file -->
    <stream id="fact" class="fact.io.hdureader.FITSStream" url="${infile}"/>

    <!-- Description of the process and the corresponding stream -->
    <process id="2" input="fact">
        <fact.utils.PreviousEventInfo
                startCellKey="StartCellData"
                outputKey="prevEvents"
                limitEvents="10"
                />
        <!-- <stream.flow.Skip condition="%{data.EventNum} &lt; 0" /> -->
        <!-- <stream.flow.Skip condition="%{data.TriggerType} != 1024" /> -->
        <fact.datacorrection.DrsCalibration
                url="${drsfile}"
                key="Data"
                outputKey="DataCalibrated"
                />
        <fact.datacorrection.PatchJumpRemoval
                dataKey="DataCalibrated"
                outputKey="DataCalibrated"
                prevEventsKey="prevEvents"
                startCellKey="StartCellData"
                jumpLimit="${PatchJumpRemoval.jumpLimit}"
                />
        <fact.datacorrection.RemoveSpikes
                dataKey="DataCalibrated"
                outputKey="DataCalibrated"
                startCellKey="StartCellData"
                leftBorder="${RemoveSpikes.leftBorder}"
                spikeLimit="${RemoveSpikes.spikeLimit}"
                topSlopeLimit="${RemoveSpikes.topSlopeLimit}"
                maxSpikeLength="${RemoveSpikes.maxSpikeLength}"
                />
        <fact.datacorrection.DrsTimeCalibration
                dataKey="DataCalibrated"
                outputKey="DataCalibrated"
                />

        <fact.filter.GaussConvolution
                key="DataCalibrated"
                outputKey="DataSmoothed"
                variance="3"/>

        <fact.statistics.Derivation
                key="DataSmoothed"
                outputKey="1Derivation" />

        <fact.filter.MovingAverage
                key="1Derivation"
                outputKey="1DerivationSmoothed"
                length="2"/>

        <fact.extraction.TimeOverThresholdTL
                dataKey="1DerivationSmoothed"
                threshold="0.5"
                outputKey="TimeOverThresh" />



        <!--Uncomment to use the viewer-->
        <!--<fact.ShowViewer key="DataCalibrated"/>-->


    </process>


</container>
