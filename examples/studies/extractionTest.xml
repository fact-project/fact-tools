<container>
  <properties url="classpath:/default/settings.properties" />
  <!-- Pathes to the input files -->
  <property name="infile" value="file:src/main/resources/testMcFile.fits.gz" />
  <property name="drsfile" value="file:src/main/resources/testMcDrsFile.drs.fits.gz" />
  <property name="integralGainFile" value="classpath:/default/defaultIntegralGains.csv" />

  <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />

  <!-- Name of the stream and url to the input file -->
  <stream id="fact" class="fact.io.FITSStream" url="${infile}" />

  <process id="2" input="fact">
	  <fact.utils.Remapping
			  key="Data"
			  outputKey="Data"
	  />
	  <fact.utils.RemappingKeys
			  keys="McCherPhotWeight,McCherPhotNumber,McMuonCherPhotWeight,McNoisePhotWeight,McCherArrTimeMean,McCherArrTimeVar,McCherArrTimeMin,McCherArrTimeMax"
	  />
	  <fact.datacorrection.DrsCalibration
			  url="${drsfile}"
			  key="Data"
			  outputKey="DataCalibrated"
	  />
	  <fact.datacorrection.RemoveSpikes
			  dataKey="DataCalibrated"
			  outputKey="DataCalibrated"
			  startCellKey="StartCellData"
			  leftBorder="${removeSpikes_leftBorder}"
			  spikeLimit="${removeSpikes_spikeLimit}"
			  topSlopeLimit="${removeSpikes_topSlopeLimit}"
			  maxSpikeLength="${removeSpikes_maxSpikeLength}"
	  />
	  <fact.datacorrection.InterpolateTimeSeries
			  calibService="calibService"
			  dataKey="DataCalibrated"
			  dataOutputKey="DataCalibrated"
	  />

	  <fact.extraction.BasicExtraction
			  dataKey="DataCalibrated"
			  outputKeyMaxAmplPos="maxPos"
			  outputKeyPhotonCharge="photoncharge"
			  url="${integralGainFile}"
			  startSearchWindow="${basicExtraction_startSearchWindow}"
			  rangeSearchWindow="${basicExtraction_rangeSearchWindow}"
			  rangeHalfHeightWindow="${basicExtraction_rangeHalfHeigthWindow}"
	  />
	  <fact.extraction.EstimateBaseline
			  dataKey="DataCalibrated"
			  outputKey="baseline"
			  firstSlice="10"
			  range="30"
	  />
	  <fact.extraction.TimeOverThreshold
			  dataKey="DataCalibrated"
			  outputKey="timeOverThreshold"
			  firstSliceOverThresholdOutputKey="arrivalTimeTOT"
			  positionsKey="maxPos"
			  threshold="1800"
			  thresholdOutputKey="thresholdForToT"
	  />
	  <fact.datacorrection.CorrectSaturation
			  dataKey="DataCalibrated"
			  outputKey="DataCalibrated"
			  totKey="timeOverThreshold"
			  firstSliceOverThresholdKey="arrivalTimeTOT"
			  threshold="1800"
			  maxPosKey="maxPos"
			  baselineKey="baseline"
	  />
	  <fact.extraction.BasicExtraction
			  dataKey="DataCalibrated"
			  outputKeyMaxAmplPos="maxPos"
			  outputKeyPhotonCharge="photoncharge"
			  url="${integralGainFile}"
			  startSearchWindow="${basicExtraction_startSearchWindow}"
			  rangeSearchWindow="${basicExtraction_rangeSearchWindow}"
			  rangeHalfHeightWindow="${basicExtraction_rangeHalfHeigthWindow}"
	  />
	  <fact.extraction.RisingEdgeForPositions
			  dataKey="DataCalibrated"
			  amplitudePositionsKey="maxPos"
			  outputKey="arrivalTimePos"
			  maxSlopesKey="maxSlopesPos"
	  />
	  <fact.extraction.RisingEdgePolynomFit
			  dataKey="DataCalibrated"
			  risingEdgeKey="arrivalTimePos"
			  outputKey="arrivalTime"
			  numberOfPoints="${risingEdgePolynomFit_numberOfPoints}"
			  maxSlopesKey="maxSlopes"
	  />
	  <fact.datacorrection.InterpolatePhotondata
			  calibService="calibService"
			  photonChargeKey="photoncharge"
			  photonChargeOutputKey="photoncharge"
			  arrivalTimeKey="arrivalTime"
			  arrivalTimeOutputKey="arrivalTime"
	  />

		<fact.cleaning.TwoLevelTimeMedian
			calibService="calibService"
			photonChargeKey="photoncharge"
			outputKey="shower"
			arrivalTimeKey="arrivalTime"
			corePixelThreshold="${twoLevelTimeNeighbor_coreThreshold}"
    	neighborPixelThreshold="${twoLevelTimeNeighbor_neighborThreshold}"
			timeLimit="${twoLevelTimeNeighbor_timeLimit}"
			minNumberOfPixel="${twoLevelTimeNeighbor_minNumberOfPixel}"
			/>

		<fact.cleaning.TwoLevelTimeMedian
			calibService="calibService"
			photonChargeKey="McCherPhotWeight"
			outputKey="truth"
			arrivalTimeKey="McCherArrTimeMean"
			corePixelThreshold="${twoLevelTimeNeighbor_coreThreshold}"
    	neighborPixelThreshold="${twoLevelTimeNeighbor_neighborThreshold}"
			timeLimit="${twoLevelTimeNeighbor_timeLimit}"
			minNumberOfPixel="${twoLevelTimeNeighbor_minNumberOfPixel}"
			/>

		<fact.features.evaluate.PhotonchargeEvaluate
			photonchargeKey="photoncharge"
			arrivalTimeKey="arrivalTime"
			mcCherenkovWeightKey="McCherPhotWeight"
			mcCherenkovArrTimeMeanKey="McCherArrTimeMean"
			mcNoiseWeightKey="McNoisePhotWeight"
    	outputKeyPhotonCharge="qualityFactorPhCh"
			outputKeyArrivalTime="qualityFactorArrTi"
			/>

    <!-- <fact.io.RootASCIIWriter url="file:${outfile}" keys="qualityFactorPhCh,qualityFactorArrTi"/> -->
  </process>
</container>
