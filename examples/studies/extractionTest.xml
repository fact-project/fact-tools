<container>
  <properties url="classpath:/default/settings.properties" />
  <!-- Pathes to the input files -->
  <property name="infile" value="classpath:/testMcFile.fits.gz" />
  <property name="drsfile" value="classpath:/testMcDrsFile.drs.fits.gz" />
 
  <property name="pixelDelayFile" value="classpath:/default/delays_zero.csv" />

  <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />
  <service id="gainService" class="fact.gainservice.GainService" />

  <!-- Name of the stream and url to the input file -->
  <stream id="fact" class="fact.io.hdureader.FITSStream" url="${infile}" />

  <process id="2" input="fact">
    <include url="classpath:/analysis/calibration.xml" />
    <include url="classpath:/analysis/extraction.xml" />

    <fact.cleaning.TwoLevelTimeMedian
      calibService="calibService"
      photonChargeKey="photoncharge"
      outputKey="shower"
      arrivalTimeKey="arrivalTime"
      corePixelThreshold="${TwoLevelTimeNeighbor.coreThreshold}"
      neighborPixelThreshold="${TwoLevelTimeNeighbor.neighborThreshold}"
      timeLimit="${TwoLevelTimeNeighbor.timeLimit}"
      minNumberOfPixel="${TwoLevelTimeNeighbor.minNumberOfPixel}"
      />

    <fact.cleaning.TwoLevelTimeMedian
      calibService="calibService"
      photonChargeKey="McCherPhotWeight"
      outputKey="truth"
      arrivalTimeKey="McCherArrTimeMean"
      corePixelThreshold="${TwoLevelTimeNeighbor.coreThreshold}"
      neighborPixelThreshold="${TwoLevelTimeNeighbor.neighborThreshold}"
      timeLimit="${TwoLevelTimeNeighbor.timeLimit}"
      minNumberOfPixel="${TwoLevelTimeNeighbor.minNumberOfPixel}"
      />

    <fact.features.evaluate.PhotonchargeEvaluate
      photonchargeKey="photoncharge"
      arrivalTimeKey="arrivalTime"
      mcCherenkovWeightKey="McCherPhotWeight"
      mcCherenkovArrTimeMeanKey="McCherArrTimeMean"
      mcNoiseWeightKey="McNoisePhotWeight"
      outputKeyPhotonCharge="qualityFactorPhCh"
      outputKeyArrivalTime="qualityFactorArrTi"
      />

  </process>
</container>
