/**
 * This class is generated by jOOQ
 */
package fact.rta.persistence.tables.records;


import fact.rta.persistence.tables.Signal;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SignalRecord extends UpdatableRecordImpl<SignalRecord> implements Record6<Timestamp, Integer, Integer, Float, Float, Integer> {

	private static final long serialVersionUID = -1292184953;

	/**
	 * Setter for <code>signal.timestamp</code>.
	 */
	public void setTimestamp(Timestamp value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>signal.timestamp</code>.
	 */
	public Timestamp getTimestamp() {
		return (Timestamp) getValue(0);
	}

	/**
	 * Setter for <code>signal.signal</code>.
	 */
	public void setSignal(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>signal.signal</code>.
	 */
	public Integer getSignal() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>signal.background</code>.
	 */
	public void setBackground(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>signal.background</code>.
	 */
	public Integer getBackground() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>signal.trigger_rate</code>.
	 */
	public void setTriggerRate(Float value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>signal.trigger_rate</code>.
	 */
	public Float getTriggerRate() {
		return (Float) getValue(3);
	}

	/**
	 * Setter for <code>signal.relative_on_time</code>.
	 */
	public void setRelativeOnTime(Float value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>signal.relative_on_time</code>.
	 */
	public Float getRelativeOnTime() {
		return (Float) getValue(4);
	}

	/**
	 * Setter for <code>signal.duration_in_seconds</code>.
	 */
	public void setDurationInSeconds(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>signal.duration_in_seconds</code>.
	 */
	public Integer getDurationInSeconds() {
		return (Integer) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Timestamp> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Timestamp, Integer, Integer, Float, Float, Integer> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Timestamp, Integer, Integer, Float, Float, Integer> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field1() {
		return Signal.SIGNAL.TIMESTAMP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Signal.SIGNAL.SIGNAL_;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Signal.SIGNAL.BACKGROUND;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Float> field4() {
		return Signal.SIGNAL.TRIGGER_RATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Float> field5() {
		return Signal.SIGNAL.RELATIVE_ON_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return Signal.SIGNAL.DURATION_IN_SECONDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value1() {
		return getTimestamp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getSignal();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getBackground();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Float value4() {
		return getTriggerRate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Float value5() {
		return getRelativeOnTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getDurationInSeconds();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SignalRecord value1(Timestamp value) {
		setTimestamp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SignalRecord value2(Integer value) {
		setSignal(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SignalRecord value3(Integer value) {
		setBackground(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SignalRecord value4(Float value) {
		setTriggerRate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SignalRecord value5(Float value) {
		setRelativeOnTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SignalRecord value6(Integer value) {
		setDurationInSeconds(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SignalRecord values(Timestamp value1, Integer value2, Integer value3, Float value4, Float value5, Integer value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SignalRecord
	 */
	public SignalRecord() {
		super(Signal.SIGNAL);
	}

	/**
	 * Create a detached, initialised SignalRecord
	 */
	public SignalRecord(Timestamp timestamp, Integer signal, Integer background, Float triggerRate, Float relativeOnTime, Integer durationInSeconds) {
		super(Signal.SIGNAL);

		setValue(0, timestamp);
		setValue(1, signal);
		setValue(2, background);
		setValue(3, triggerRate);
		setValue(4, relativeOnTime);
		setValue(5, durationInSeconds);
	}
}
