/**
 * This class is generated by jOOQ
 */
package fact.rta.persistence.tables.records;


import fact.rta.persistence.tables.Sources;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SourcesRecord extends TableRecordImpl<SourcesRecord> implements Record4<String, Float, Float, Float> {

	private static final long serialVersionUID = 823568852;

	/**
	 * Setter for <code>sources.source_name</code>.
	 */
	public void setSourceName(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>sources.source_name</code>.
	 */
	public String getSourceName() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>sources.magnitude</code>.
	 */
	public void setMagnitude(Float value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>sources.magnitude</code>.
	 */
	public Float getMagnitude() {
		return (Float) getValue(1);
	}

	/**
	 * Setter for <code>sources.right_ascension</code>.
	 */
	public void setRightAscension(Float value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>sources.right_ascension</code>.
	 */
	public Float getRightAscension() {
		return (Float) getValue(2);
	}

	/**
	 * Setter for <code>sources.declination</code>.
	 */
	public void setDeclination(Float value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>sources.declination</code>.
	 */
	public Float getDeclination() {
		return (Float) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, Float, Float, Float> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, Float, Float, Float> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Sources.SOURCES.SOURCE_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Float> field2() {
		return Sources.SOURCES.MAGNITUDE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Float> field3() {
		return Sources.SOURCES.RIGHT_ASCENSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Float> field4() {
		return Sources.SOURCES.DECLINATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getSourceName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Float value2() {
		return getMagnitude();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Float value3() {
		return getRightAscension();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Float value4() {
		return getDeclination();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SourcesRecord value1(String value) {
		setSourceName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SourcesRecord value2(Float value) {
		setMagnitude(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SourcesRecord value3(Float value) {
		setRightAscension(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SourcesRecord value4(Float value) {
		setDeclination(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SourcesRecord values(String value1, Float value2, Float value3, Float value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SourcesRecord
	 */
	public SourcesRecord() {
		super(Sources.SOURCES);
	}

	/**
	 * Create a detached, initialised SourcesRecord
	 */
	public SourcesRecord(String sourceName, Float magnitude, Float rightAscension, Float declination) {
		super(Sources.SOURCES);

		setValue(0, sourceName);
		setValue(1, magnitude);
		setValue(2, rightAscension);
		setValue(3, declination);
	}
}
