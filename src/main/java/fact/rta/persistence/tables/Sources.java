/**
 * This class is generated by jOOQ
 */
package fact.rta.persistence.tables;


import fact.rta.persistence.DefaultSchema;
import fact.rta.persistence.tables.records.SourcesRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sources extends TableImpl<SourcesRecord> {

	private static final long serialVersionUID = -746179408;

	/**
	 * The reference instance of <code>sources</code>
	 */
	public static final Sources SOURCES = new Sources();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SourcesRecord> getRecordType() {
		return SourcesRecord.class;
	}

	/**
	 * The column <code>sources.source_name</code>.
	 */
	public final TableField<SourcesRecord, String> SOURCE_NAME = createField("source_name", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>sources.magnitude</code>.
	 */
	public final TableField<SourcesRecord, Float> MAGNITUDE = createField("magnitude", org.jooq.impl.SQLDataType.REAL, this, "");

	/**
	 * The column <code>sources.right_ascension</code>.
	 */
	public final TableField<SourcesRecord, Float> RIGHT_ASCENSION = createField("right_ascension", org.jooq.impl.SQLDataType.REAL, this, "");

	/**
	 * The column <code>sources.declination</code>.
	 */
	public final TableField<SourcesRecord, Float> DECLINATION = createField("declination", org.jooq.impl.SQLDataType.REAL, this, "");

	/**
	 * Create a <code>sources</code> table reference
	 */
	public Sources() {
		this("sources", null);
	}

	/**
	 * Create an aliased <code>sources</code> table reference
	 */
	public Sources(String alias) {
		this(alias, SOURCES);
	}

	private Sources(String alias, Table<SourcesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Sources(String alias, Table<SourcesRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Sources as(String alias) {
		return new Sources(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Sources rename(String name) {
		return new Sources(name, null);
	}
}
