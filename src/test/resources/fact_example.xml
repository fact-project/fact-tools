<container>



    <stream id="fact" class="fact.io.FitsStream" 
            url="${data}" />
            
        <process input="fact">
            <fact.filter.DrsCalibration url="${dataDRS}" key="data"  outputKey="DataCalibrated"/>  
            <fact.utils.CutSlices  start="22" end="220"/>
            <fact.filter.InterpolateBadPixel key="DataCalibrated"  outputKey="DataCalibrated"
                badChidIds="863,868,297,927,80,873,1093,1094,527,528,721,722" />
                
            <fact.filter.RemoveSpikesMars key="DataCalibrated" outputKey="DataCalibrated" />
<!--
            <fact.processors.RemoveJumps key="DataCalibrated" outputKey="DataCalibrated" />
-->
            
            <fact.features.MaxAmplitudePosition key="DataCalibrated" outputKey="AmplitudePositions" />
            <fact.features.PhotonCharge key="DataCalibrated" positions="AmplitudePositions" outputKey="photoncharge"/>
            
			<fact.cleaning.CoreNeighborClean key="photoncharge" outputKey="shower" keyPositions="AmplitudePositions" timeThreshold="30"  minNumberOfPixel="2"/>
            <fact.features.SourcePosition url="${drive_file}" outputKey="sourcePosition" physicalSource="crab"/>
<!--             <fact.features.HillasParameter pixels="showerPixel" photonEquivalent="photonCharge" sourcePosition="sourcePosition" outputKey="Hillas_"/> -->
    <stream.flow.Skip condition="%{data.shower} == null" />
	        <fact.features.DistributionFromShower weights="photoncharge" key="shower" outputKey="dist" />
			<fact.features.HillasAlpha distribution="dist" sourcePosition="sourcePosition" outputKey="alpha" />
            <fact.io.RootASCIIWriter keys="EventNum,TriggerType,alpha" url="${outfile}" />
		</process>
</container>
