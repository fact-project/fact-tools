<container>


<property name="data" value="/home/dneise/JAFS/jafs/pyjafs/cer1.fits.gz" />
<property name="dataDRS" value="/home/dneise/JAFS/jafs/pyjafs/dummy.drs.fits.gz" />
<property name="drive_file" value="/home/dneise/JAFS/jafs/pyjafs/20130102.DRIVE_CONTROL_TRACKING_POSITION.fits" />
<property name="outfile" value="/home/dneise/fact-tools/test.txt" />

    <stream id="fact" class="fact.io.FitsStream" 
            url="file:${data}" />
            
        <process input="fact">
            <fact.processors.DrsCalibration url="file:${dataDRS}" key="data"  outputKey="DataCalibrated"/>  
            <fact.processors.CutSlices  start="22" end="220"/>
            <fact.processors.InterpolateBadPixel key="DataCalibrated"  outputKey="DataCalibrated"
                badChidIds="863,868,297,927,80,873,1093,1094,527,528,721,722" />
                
            <fact.processors.parfact.RemoveSpikesMars key="DataCalibrated" outputKey="DataCalibrated" />
<!--
            <fact.processors.RemoveJumps key="DataCalibrated" outputKey="DataCalibrated" />
-->
            
            <fact.processors.MaxAmplitudePosition key="DataCalibrated" outputKey="AmplitudePositions" />
            <fact.processors.parfact.CalculatePhotonCharge key="DataCalibrated" positions="AmplitudePositions" outputKey="photonCharge"/>
            
            <fact.processors.parfact.CoreNeighborClean key="photonCharge" CorePixelThreshold="5.0" neighborPixelThreshold="2.0" outputKey="showerPixel" />
            <fact.processors.parfact.CalcSourcePosition url="file:${drive_file}" outputKey="sourcePosition"/>
            <fact.processors.parfact.HillasParameter pixels="showerPixel" photonEquivalent="photonCharge" sourcePosition="sourcePosition" outputKey="Hillas_"/>
            
            <fact.io.RootASCIIWriter keys="EventNum,TriggerType,Hillas_Alpha,Hillas_Size,Hillas_Area" url="file:${outfile}" />
            
<!--
            <PrintData/> 
-->
<!--
 			<fact.image.ShowImage/> 
-->
<!--
 			<fact.image.monitors.StatusWindow /> 
-->
		</process>
</container>
