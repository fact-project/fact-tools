<container>

    <properties url="classpath:/default/settings.properties" />

    <!-- Paths to the input files -->
    <property name="separator" value="/home/kbruegge/ma/data/separation_output/separation_model.pmml" />
    <property name="estimator" value="/home/kbruegge/ma/data/separation_output/estimator.pmml" />
    <property name="infile" value="/home/kbruegge/20140105_151.fits.fz" />
    <property name="drsfile" value="file:/home/kbruegge/20140105_141.drs.fits.gz" />

    <service id="rta_service" class="fact.rta.RTAWebService" sqlitePath="file:/home/kbruegge/rta.sqlite"/>
    <service id="auxService" class="fact.auxservice.AuxFileService" auxFolder="file:/home/kbruegge/aux" />

    <property name="num_copies" value="1" />


    <property name="integralGainFile" value="classpath:/default/gain_sorted_20131127.csv" />
    <property name="pixelDelayFile" value="classpath:/default/delays_lightpulser_20150217.csv" />



    <service id="calibService" class="fact.calibrationservice.ConstantCalibService" />

    <service id="rf" class="fact.PredictionService" url="file:${separator}" />
    <service id="regressor" class="fact.PredictionService" url="file:${estimator}" />



    <stream id="fact" class="fact.io.zfits.ZFitsStream"  url="file:${infile}" />

    <Queue id="out_queue" />
    <Queue id="performance_queue" />
    <Queue id="main" />


    <process input="fact" >
        <RemoveKeys keys="FWVER*,DNA*,ID*,StartCellTimeMarker" />
        <Enqueue queues="main" />
                <!--<Enqueue queues="performance_queue" keys="@timestamp,@thread,@datarate,@freememory,@totalmemory,@maxmemory"/>-->
    </process>

    <!-- Description of the process and the corresponding stream -->
    <!-- Description of the process and the corresponding stream -->
    <process input="main" copies="${num_copies}">
        <!--        <Delay time="500ms" /> -->
        <fact.DataRate every="40" webService="rta_service" logmemory="true"/>
        <!-- prevEventAndSkip: -->
        <!-- PreviousEventInfo, Skip(no Data Trigger) -->
        <include url="classpath:/default/data/prevEventAndSkip.xml" />
        <!-- Output: Data -->

        <!-- Calibration: -->
        <!-- DrsCalibration, PatchJumpRemoval, RemoveSpikes,
        DrsTimeCalibration, ArrayTimeCorrection, InterpolateBadPixel -->
        <include url="classpath:/default/data/calibration.xml" />
        <!-- Output: DataCalibrated -->
        <RemoveKeys keys="Data" />


        <!-- Extraction -->
        <!-- BasicExtraction, RisingEdgeForPositions, RisingEdgePolynomFit, TimeOverThreshold,
        PhotonChargeTimeOverThreshold, HandleSaturation, CorrectPixelDelays-->
        <include url="classpath:/default/data/extraction.xml" />
        <!-- Output: photoncharge, arrivalTime -->

        <!-- Cleaning -->
        <!-- SourcePosition(Cetatauri), CoreNeighborCleanTimeNeighbor-->
        <include url="classpath:/default/data/cleaning.xml" />
        <!-- Output: shower -->

        <!-- Parameter calculation (only source independent) -->
        <!-- ArrayMean(photoncharge,arrivalTime), ArrayStatistics(photoncharge,arrivalTime,maxSlopes,
        arrivalTimePos,maxSlopesPos,maxAmplitudePosition,photonchargeSaturated,arrivalTimeTOT),
        Size, DistributionFromShower, M3Long, Length, Width, NumberOfIslands, TimeGraident,
        Concentration, ConcentrationCore, ConcentrationAtCenterOfGravity, Leakage, TimeSpread,
        ShowerSlope, Disp -->
        <include url="classpath:/default/data/parameterCalc.xml" />
        <!-- Output: source independent parameters -->

        <!-- Parameter calculation (only source dependent) -->
        <!-- SourcePosition(${sourcename}), AntiSourcePosition(5), Alpha(for 6 Sources),
        Distance(for 6 Sources), CosDeltaAlpha(for 6 Sources), Theta(for 6 Sources) -->
        <include url="classpath:/default/data/sourceParameter.xml" />



        <Skip condition="%{data.numPixeInShower} &lt; 9" />
        <fact.rta.Energy predictor="regressor" />
        <fact.rta.Signal predictor="rf" />
        <fact.rta.RTAProcessor webService="rta_service"/>
        <!--<RemoveKeys keys="FWVER*,DNA*,ID*,StartCellTimeMarker" />-->
        <Enqueue queues="out_queue" keys="@timestamp,signal:*,energy,background:*"/>

    </process>

    <!--<process input="performance_queue">-->
        <!--<If condition="%{data.@datarate} != null" >-->
            <!--<fact.io.JSONWriter url="file:./rta_performance.json" keys="@timestamp,@thread,@datarate,@freememory,@totalmemory,@maxmemory"/>-->
        <!--</If>-->
    <!--</process>-->

    <process input="out_queue">
        <fact.io.JSONWriter url="file:./rta.json" keys="@timestamp,signal:*,energy,background:*"/>
    </process>

</container>
